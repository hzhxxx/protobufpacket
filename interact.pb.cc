// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interact.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "interact.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
class CMsgRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgResp> {
} _CMsgResp_default_instance_;
class CMsgReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgReq> {
} _CMsgReq_default_instance_;
class CLoginRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CLoginResp> {
} _CLoginResp_default_instance_;
class CLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CLoginReq> {
} _CLoginReq_default_instance_;
class CRegiRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CRegiResp> {
} _CRegiResp_default_instance_;
class CRegiReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CRegiReq> {
} _CRegiReq_default_instance_;
class CProtoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoMsg> {
} _CProtoMsg_default_instance_;

namespace protobuf_interact_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgResp, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgResp, msgack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReq, msgcontent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginResp, loginresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginResp, loginmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CLoginReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiResp, registerresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiResp, registermsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiReq, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CRegiReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, regireq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, regiresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, loginreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, loginresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, msgreq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoMsg, msgresp_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(CMsgResp)},
  { 7, -1, sizeof(CMsgReq)},
  { 13, -1, sizeof(CLoginResp)},
  { 19, -1, sizeof(CLoginReq)},
  { 25, -1, sizeof(CRegiResp)},
  { 31, -1, sizeof(CRegiReq)},
  { 37, -1, sizeof(CProtoMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CLoginResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CRegiResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CRegiReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "interact.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMsgResp_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMsgReq_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CLoginResp_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CRegiResp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CRegiReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CProtoMsg_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CMsgResp_default_instance_.DefaultConstruct();
  _CMsgReq_default_instance_.DefaultConstruct();
  _CLoginResp_default_instance_.DefaultConstruct();
  _CLoginReq_default_instance_.DefaultConstruct();
  _CRegiResp_default_instance_.DefaultConstruct();
  _CRegiReq_default_instance_.DefaultConstruct();
  _CProtoMsg_default_instance_.DefaultConstruct();
  _CProtoMsg_default_instance_.get_mutable()->regireq_ = const_cast< ::app::CRegiReq*>(
      ::app::CRegiReq::internal_default_instance());
  _CProtoMsg_default_instance_.get_mutable()->regiresp_ = const_cast< ::app::CRegiResp*>(
      ::app::CRegiResp::internal_default_instance());
  _CProtoMsg_default_instance_.get_mutable()->loginreq_ = const_cast< ::app::CLoginReq*>(
      ::app::CLoginReq::internal_default_instance());
  _CProtoMsg_default_instance_.get_mutable()->loginresp_ = const_cast< ::app::CLoginResp*>(
      ::app::CLoginResp::internal_default_instance());
  _CProtoMsg_default_instance_.get_mutable()->msgreq_ = const_cast< ::app::CMsgReq*>(
      ::app::CMsgReq::internal_default_instance());
  _CProtoMsg_default_instance_.get_mutable()->msgresp_ = const_cast< ::app::CMsgResp*>(
      ::app::CMsgResp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016interact.proto\022\003app\":\n\010CMsgResp\022\016\n\006Use"
      "rId\030\001 \001(\t\022\016\n\006Result\030\002 \001(\005\022\016\n\006MsgAck\030\003 \001("
      "\t\"-\n\007CMsgReq\022\016\n\006UserId\030\001 \001(\t\022\022\n\nMsgConte"
      "nt\030\002 \001(\t\"3\n\nCLoginResp\022\023\n\013LoginResult\030\001 "
      "\001(\005\022\020\n\010LoginMsg\030\002 \001(\t\"-\n\tCLoginReq\022\016\n\006Us"
      "erId\030\001 \001(\t\022\020\n\010PassWord\030\002 \001(\t\"8\n\tCRegiRes"
      "p\022\026\n\016RegisterResult\030\001 \001(\005\022\023\n\013RegisterMsg"
      "\030\002 \001(\t\",\n\010CRegiReq\022\016\n\006UserId\030\001 \001(\t\022\020\n\010Pa"
      "ssWord\030\002 \001(\t\"\342\001\n\tCProtoMsg\022\017\n\007MsgType\030\001 "
      "\001(\005\022\036\n\007RegiReq\030\002 \001(\0132\r.app.CRegiReq\022 \n\010R"
      "egiResp\030\003 \001(\0132\016.app.CRegiResp\022 \n\010LoginRe"
      "q\030\004 \001(\0132\016.app.CLoginReq\022\"\n\tLoginResp\030\005 \001"
      "(\0132\017.app.CLoginResp\022\034\n\006MsgReq\030\006 \001(\0132\014.ap"
      "p.CMsgReq\022\036\n\007MsgResp\030\007 \001(\0132\r.app.CMsgRes"
      "pB1\n\016com.weilin.AppB\tAppProtos\252\002\023Weilin."
      "Protobuf.Appb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 620);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "interact.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_interact_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgResp::kUserIdFieldNumber;
const int CMsgResp::kResultFieldNumber;
const int CMsgResp::kMsgAckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgResp::CMsgResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CMsgResp)
}
CMsgResp::CMsgResp(const CMsgResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  msgack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgack().size() > 0) {
    msgack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgack_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:app.CMsgResp)
}

void CMsgResp::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

CMsgResp::~CMsgResp() {
  // @@protoc_insertion_point(destructor:app.CMsgResp)
  SharedDtor();
}

void CMsgResp::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgResp::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[0].descriptor;
}

const CMsgResp& CMsgResp::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgResp* CMsgResp::New(::google::protobuf::Arena* arena) const {
  CMsgResp* n = new CMsgResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CMsgResp)
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool CMsgResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CMsgResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CMsgResp.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Result = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgAck = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgack()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgack().data(), this->msgack().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CMsgResp.MsgAck"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CMsgResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CMsgResp)
  return false;
#undef DO_
}

void CMsgResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CMsgResp)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgResp.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // int32 Result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }

  // string MsgAck = 3;
  if (this->msgack().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgack().data(), this->msgack().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgResp.MsgAck");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msgack(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CMsgResp)
}

::google::protobuf::uint8* CMsgResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CMsgResp)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgResp.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // int32 Result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }

  // string MsgAck = 3;
  if (this->msgack().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgack().data(), this->msgack().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgResp.MsgAck");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msgack(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CMsgResp)
  return target;
}

size_t CMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CMsgResp)
  size_t total_size = 0;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string MsgAck = 3;
  if (this->msgack().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgack());
  }

  // int32 Result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CMsgResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CMsgResp)
    MergeFrom(*source);
  }
}

void CMsgResp::MergeFrom(const CMsgResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.msgack().size() > 0) {

    msgack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgack_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void CMsgResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgResp::CopyFrom(const CMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgResp::IsInitialized() const {
  return true;
}

void CMsgResp::Swap(CMsgResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgResp::InternalSwap(CMsgResp* other) {
  userid_.Swap(&other->userid_);
  msgack_.Swap(&other->msgack_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgResp::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgResp

// string UserId = 1;
void CMsgResp::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMsgResp::userid() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.UserId)
  return userid_.GetNoArena();
}
void CMsgResp::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgResp.UserId)
}
#if LANG_CXX11
void CMsgResp::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgResp.UserId)
}
#endif
void CMsgResp::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgResp.UserId)
}
void CMsgResp::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgResp.UserId)
}
::std::string* CMsgResp::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgResp.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgResp::release_userid() {
  // @@protoc_insertion_point(field_release:app.CMsgResp.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgResp::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgResp.UserId)
}

// int32 Result = 2;
void CMsgResp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 CMsgResp::result() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.Result)
  return result_;
}
void CMsgResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:app.CMsgResp.Result)
}

// string MsgAck = 3;
void CMsgResp::clear_msgack() {
  msgack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMsgResp::msgack() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.MsgAck)
  return msgack_.GetNoArena();
}
void CMsgResp::set_msgack(const ::std::string& value) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgResp.MsgAck)
}
#if LANG_CXX11
void CMsgResp::set_msgack(::std::string&& value) {
  
  msgack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgResp.MsgAck)
}
#endif
void CMsgResp::set_msgack(const char* value) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgResp.MsgAck)
}
void CMsgResp::set_msgack(const char* value, size_t size) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgResp.MsgAck)
}
::std::string* CMsgResp::mutable_msgack() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgResp.MsgAck)
  return msgack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgResp::release_msgack() {
  // @@protoc_insertion_point(field_release:app.CMsgResp.MsgAck)
  
  return msgack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgResp::set_allocated_msgack(::std::string* msgack) {
  if (msgack != NULL) {
    
  } else {
    
  }
  msgack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgack);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgResp.MsgAck)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgReq::kUserIdFieldNumber;
const int CMsgReq::kMsgContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgReq::CMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CMsgReq)
}
CMsgReq::CMsgReq(const CMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  msgcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgcontent().size() > 0) {
    msgcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgcontent_);
  }
  // @@protoc_insertion_point(copy_constructor:app.CMsgReq)
}

void CMsgReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CMsgReq::~CMsgReq() {
  // @@protoc_insertion_point(destructor:app.CMsgReq)
  SharedDtor();
}

void CMsgReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgReq::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[1].descriptor;
}

const CMsgReq& CMsgReq::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgReq* CMsgReq::New(::google::protobuf::Arena* arena) const {
  CMsgReq* n = new CMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CMsgReq)
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CMsgReq.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string MsgContent = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgcontent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msgcontent().data(), this->msgcontent().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CMsgReq.MsgContent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CMsgReq)
  return false;
#undef DO_
}

void CMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CMsgReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgReq.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string MsgContent = 2;
  if (this->msgcontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgcontent().data(), this->msgcontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgReq.MsgContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msgcontent(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CMsgReq)
}

::google::protobuf::uint8* CMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CMsgReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgReq.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string MsgContent = 2;
  if (this->msgcontent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msgcontent().data(), this->msgcontent().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CMsgReq.MsgContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msgcontent(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CMsgReq)
  return target;
}

size_t CMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CMsgReq)
  size_t total_size = 0;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string MsgContent = 2;
  if (this->msgcontent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgcontent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CMsgReq)
    MergeFrom(*source);
  }
}

void CMsgReq::MergeFrom(const CMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.msgcontent().size() > 0) {

    msgcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgcontent_);
  }
}

void CMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgReq::CopyFrom(const CMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgReq::IsInitialized() const {
  return true;
}

void CMsgReq::Swap(CMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgReq::InternalSwap(CMsgReq* other) {
  userid_.Swap(&other->userid_);
  msgcontent_.Swap(&other->msgcontent_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgReq::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgReq

// string UserId = 1;
void CMsgReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CMsgReq.UserId)
  return userid_.GetNoArena();
}
void CMsgReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgReq.UserId)
}
#if LANG_CXX11
void CMsgReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgReq.UserId)
}
#endif
void CMsgReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgReq.UserId)
}
void CMsgReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgReq.UserId)
}
::std::string* CMsgReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CMsgReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgReq.UserId)
}

// string MsgContent = 2;
void CMsgReq::clear_msgcontent() {
  msgcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CMsgReq::msgcontent() const {
  // @@protoc_insertion_point(field_get:app.CMsgReq.MsgContent)
  return msgcontent_.GetNoArena();
}
void CMsgReq::set_msgcontent(const ::std::string& value) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgReq.MsgContent)
}
#if LANG_CXX11
void CMsgReq::set_msgcontent(::std::string&& value) {
  
  msgcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgReq.MsgContent)
}
#endif
void CMsgReq::set_msgcontent(const char* value) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgReq.MsgContent)
}
void CMsgReq::set_msgcontent(const char* value, size_t size) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgReq.MsgContent)
}
::std::string* CMsgReq::mutable_msgcontent() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgReq.MsgContent)
  return msgcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgReq::release_msgcontent() {
  // @@protoc_insertion_point(field_release:app.CMsgReq.MsgContent)
  
  return msgcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgReq::set_allocated_msgcontent(::std::string* msgcontent) {
  if (msgcontent != NULL) {
    
  } else {
    
  }
  msgcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgcontent);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgReq.MsgContent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLoginResp::kLoginResultFieldNumber;
const int CLoginResp::kLoginMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLoginResp::CLoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CLoginResp)
}
CLoginResp::CLoginResp(const CLoginResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  loginmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.loginmsg().size() > 0) {
    loginmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginmsg_);
  }
  loginresult_ = from.loginresult_;
  // @@protoc_insertion_point(copy_constructor:app.CLoginResp)
}

void CLoginResp::SharedCtor() {
  loginmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginresult_ = 0;
  _cached_size_ = 0;
}

CLoginResp::~CLoginResp() {
  // @@protoc_insertion_point(destructor:app.CLoginResp)
  SharedDtor();
}

void CLoginResp::SharedDtor() {
  loginmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CLoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLoginResp::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[2].descriptor;
}

const CLoginResp& CLoginResp::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CLoginResp* CLoginResp::New(::google::protobuf::Arena* arena) const {
  CLoginResp* n = new CLoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CLoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CLoginResp)
  loginmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loginresult_ = 0;
}

bool CLoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CLoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 LoginResult = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string LoginMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loginmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->loginmsg().data(), this->loginmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CLoginResp.LoginMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CLoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CLoginResp)
  return false;
#undef DO_
}

void CLoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CLoginResp)
  // int32 LoginResult = 1;
  if (this->loginresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->loginresult(), output);
  }

  // string LoginMsg = 2;
  if (this->loginmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginmsg().data(), this->loginmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginResp.LoginMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->loginmsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CLoginResp)
}

::google::protobuf::uint8* CLoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CLoginResp)
  // int32 LoginResult = 1;
  if (this->loginresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->loginresult(), target);
  }

  // string LoginMsg = 2;
  if (this->loginmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->loginmsg().data(), this->loginmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginResp.LoginMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->loginmsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CLoginResp)
  return target;
}

size_t CLoginResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CLoginResp)
  size_t total_size = 0;

  // string LoginMsg = 2;
  if (this->loginmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->loginmsg());
  }

  // int32 LoginResult = 1;
  if (this->loginresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->loginresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CLoginResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CLoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CLoginResp)
    MergeFrom(*source);
  }
}

void CLoginResp::MergeFrom(const CLoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CLoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.loginmsg().size() > 0) {

    loginmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loginmsg_);
  }
  if (from.loginresult() != 0) {
    set_loginresult(from.loginresult());
  }
}

void CLoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLoginResp::CopyFrom(const CLoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CLoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLoginResp::IsInitialized() const {
  return true;
}

void CLoginResp::Swap(CLoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLoginResp::InternalSwap(CLoginResp* other) {
  loginmsg_.Swap(&other->loginmsg_);
  std::swap(loginresult_, other->loginresult_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CLoginResp::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CLoginResp

// int32 LoginResult = 1;
void CLoginResp::clear_loginresult() {
  loginresult_ = 0;
}
::google::protobuf::int32 CLoginResp::loginresult() const {
  // @@protoc_insertion_point(field_get:app.CLoginResp.LoginResult)
  return loginresult_;
}
void CLoginResp::set_loginresult(::google::protobuf::int32 value) {
  
  loginresult_ = value;
  // @@protoc_insertion_point(field_set:app.CLoginResp.LoginResult)
}

// string LoginMsg = 2;
void CLoginResp::clear_loginmsg() {
  loginmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CLoginResp::loginmsg() const {
  // @@protoc_insertion_point(field_get:app.CLoginResp.LoginMsg)
  return loginmsg_.GetNoArena();
}
void CLoginResp::set_loginmsg(const ::std::string& value) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginResp.LoginMsg)
}
#if LANG_CXX11
void CLoginResp::set_loginmsg(::std::string&& value) {
  
  loginmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginResp.LoginMsg)
}
#endif
void CLoginResp::set_loginmsg(const char* value) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginResp.LoginMsg)
}
void CLoginResp::set_loginmsg(const char* value, size_t size) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginResp.LoginMsg)
}
::std::string* CLoginResp::mutable_loginmsg() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginResp.LoginMsg)
  return loginmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CLoginResp::release_loginmsg() {
  // @@protoc_insertion_point(field_release:app.CLoginResp.LoginMsg)
  
  return loginmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CLoginResp::set_allocated_loginmsg(::std::string* loginmsg) {
  if (loginmsg != NULL) {
    
  } else {
    
  }
  loginmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginmsg);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginResp.LoginMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CLoginReq::kUserIdFieldNumber;
const int CLoginReq::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CLoginReq::CLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CLoginReq)
}
CLoginReq::CLoginReq(const CLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:app.CLoginReq)
}

void CLoginReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CLoginReq::~CLoginReq() {
  // @@protoc_insertion_point(destructor:app.CLoginReq)
  SharedDtor();
}

void CLoginReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CLoginReq::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[3].descriptor;
}

const CLoginReq& CLoginReq::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CLoginReq* CLoginReq::New(::google::protobuf::Arena* arena) const {
  CLoginReq* n = new CLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CLoginReq)
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CLoginReq.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PassWord = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CLoginReq.PassWord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CLoginReq)
  return false;
#undef DO_
}

void CLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CLoginReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginReq.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginReq.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CLoginReq)
}

::google::protobuf::uint8* CLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CLoginReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginReq.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CLoginReq.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CLoginReq)
  return target;
}

size_t CLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CLoginReq)
  size_t total_size = 0;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CLoginReq)
    MergeFrom(*source);
  }
}

void CLoginReq::MergeFrom(const CLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void CLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CLoginReq::CopyFrom(const CLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CLoginReq::IsInitialized() const {
  return true;
}

void CLoginReq::Swap(CLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CLoginReq::InternalSwap(CLoginReq* other) {
  userid_.Swap(&other->userid_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CLoginReq::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CLoginReq

// string UserId = 1;
void CLoginReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CLoginReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CLoginReq.UserId)
  return userid_.GetNoArena();
}
void CLoginReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginReq.UserId)
}
#if LANG_CXX11
void CLoginReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginReq.UserId)
}
#endif
void CLoginReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginReq.UserId)
}
void CLoginReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginReq.UserId)
}
::std::string* CLoginReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CLoginReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CLoginReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CLoginReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginReq.UserId)
}

// string PassWord = 2;
void CLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CLoginReq::password() const {
  // @@protoc_insertion_point(field_get:app.CLoginReq.PassWord)
  return password_.GetNoArena();
}
void CLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginReq.PassWord)
}
#if LANG_CXX11
void CLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginReq.PassWord)
}
#endif
void CLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginReq.PassWord)
}
void CLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginReq.PassWord)
}
::std::string* CLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:app.CLoginReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginReq.PassWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegiResp::kRegisterResultFieldNumber;
const int CRegiResp::kRegisterMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegiResp::CRegiResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CRegiResp)
}
CRegiResp::CRegiResp(const CRegiResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  registermsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.registermsg().size() > 0) {
    registermsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registermsg_);
  }
  registerresult_ = from.registerresult_;
  // @@protoc_insertion_point(copy_constructor:app.CRegiResp)
}

void CRegiResp::SharedCtor() {
  registermsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registerresult_ = 0;
  _cached_size_ = 0;
}

CRegiResp::~CRegiResp() {
  // @@protoc_insertion_point(destructor:app.CRegiResp)
  SharedDtor();
}

void CRegiResp::SharedDtor() {
  registermsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CRegiResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegiResp::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[4].descriptor;
}

const CRegiResp& CRegiResp::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CRegiResp* CRegiResp::New(::google::protobuf::Arena* arena) const {
  CRegiResp* n = new CRegiResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegiResp::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CRegiResp)
  registermsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  registerresult_ = 0;
}

bool CRegiResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CRegiResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 RegisterResult = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &registerresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RegisterMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registermsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registermsg().data(), this->registermsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CRegiResp.RegisterMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CRegiResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CRegiResp)
  return false;
#undef DO_
}

void CRegiResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CRegiResp)
  // int32 RegisterResult = 1;
  if (this->registerresult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->registerresult(), output);
  }

  // string RegisterMsg = 2;
  if (this->registermsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registermsg().data(), this->registermsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiResp.RegisterMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->registermsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CRegiResp)
}

::google::protobuf::uint8* CRegiResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CRegiResp)
  // int32 RegisterResult = 1;
  if (this->registerresult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->registerresult(), target);
  }

  // string RegisterMsg = 2;
  if (this->registermsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registermsg().data(), this->registermsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiResp.RegisterMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->registermsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CRegiResp)
  return target;
}

size_t CRegiResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CRegiResp)
  size_t total_size = 0;

  // string RegisterMsg = 2;
  if (this->registermsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->registermsg());
  }

  // int32 RegisterResult = 1;
  if (this->registerresult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->registerresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegiResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CRegiResp)
  GOOGLE_DCHECK_NE(&from, this);
  const CRegiResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegiResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CRegiResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CRegiResp)
    MergeFrom(*source);
  }
}

void CRegiResp::MergeFrom(const CRegiResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CRegiResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.registermsg().size() > 0) {

    registermsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.registermsg_);
  }
  if (from.registerresult() != 0) {
    set_registerresult(from.registerresult());
  }
}

void CRegiResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CRegiResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegiResp::CopyFrom(const CRegiResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CRegiResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegiResp::IsInitialized() const {
  return true;
}

void CRegiResp::Swap(CRegiResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegiResp::InternalSwap(CRegiResp* other) {
  registermsg_.Swap(&other->registermsg_);
  std::swap(registerresult_, other->registerresult_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegiResp::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRegiResp

// int32 RegisterResult = 1;
void CRegiResp::clear_registerresult() {
  registerresult_ = 0;
}
::google::protobuf::int32 CRegiResp::registerresult() const {
  // @@protoc_insertion_point(field_get:app.CRegiResp.RegisterResult)
  return registerresult_;
}
void CRegiResp::set_registerresult(::google::protobuf::int32 value) {
  
  registerresult_ = value;
  // @@protoc_insertion_point(field_set:app.CRegiResp.RegisterResult)
}

// string RegisterMsg = 2;
void CRegiResp::clear_registermsg() {
  registermsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CRegiResp::registermsg() const {
  // @@protoc_insertion_point(field_get:app.CRegiResp.RegisterMsg)
  return registermsg_.GetNoArena();
}
void CRegiResp::set_registermsg(const ::std::string& value) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiResp.RegisterMsg)
}
#if LANG_CXX11
void CRegiResp::set_registermsg(::std::string&& value) {
  
  registermsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiResp.RegisterMsg)
}
#endif
void CRegiResp::set_registermsg(const char* value) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiResp.RegisterMsg)
}
void CRegiResp::set_registermsg(const char* value, size_t size) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiResp.RegisterMsg)
}
::std::string* CRegiResp::mutable_registermsg() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiResp.RegisterMsg)
  return registermsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CRegiResp::release_registermsg() {
  // @@protoc_insertion_point(field_release:app.CRegiResp.RegisterMsg)
  
  return registermsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CRegiResp::set_allocated_registermsg(::std::string* registermsg) {
  if (registermsg != NULL) {
    
  } else {
    
  }
  registermsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registermsg);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiResp.RegisterMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CRegiReq::kUserIdFieldNumber;
const int CRegiReq::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CRegiReq::CRegiReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CRegiReq)
}
CRegiReq::CRegiReq(const CRegiReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:app.CRegiReq)
}

void CRegiReq::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CRegiReq::~CRegiReq() {
  // @@protoc_insertion_point(destructor:app.CRegiReq)
  SharedDtor();
}

void CRegiReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CRegiReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CRegiReq::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[5].descriptor;
}

const CRegiReq& CRegiReq::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CRegiReq* CRegiReq::New(::google::protobuf::Arena* arena) const {
  CRegiReq* n = new CRegiReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CRegiReq::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CRegiReq)
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CRegiReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CRegiReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CRegiReq.UserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PassWord = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "app.CRegiReq.PassWord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CRegiReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CRegiReq)
  return false;
#undef DO_
}

void CRegiReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CRegiReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiReq.UserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiReq.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:app.CRegiReq)
}

::google::protobuf::uint8* CRegiReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CRegiReq)
  // string UserId = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiReq.UserId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "app.CRegiReq.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CRegiReq)
  return target;
}

size_t CRegiReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CRegiReq)
  size_t total_size = 0;

  // string UserId = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string PassWord = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CRegiReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CRegiReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CRegiReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CRegiReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CRegiReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CRegiReq)
    MergeFrom(*source);
  }
}

void CRegiReq::MergeFrom(const CRegiReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CRegiReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void CRegiReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CRegiReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CRegiReq::CopyFrom(const CRegiReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CRegiReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CRegiReq::IsInitialized() const {
  return true;
}

void CRegiReq::Swap(CRegiReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CRegiReq::InternalSwap(CRegiReq* other) {
  userid_.Swap(&other->userid_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CRegiReq::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CRegiReq

// string UserId = 1;
void CRegiReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CRegiReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CRegiReq.UserId)
  return userid_.GetNoArena();
}
void CRegiReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiReq.UserId)
}
#if LANG_CXX11
void CRegiReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiReq.UserId)
}
#endif
void CRegiReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiReq.UserId)
}
void CRegiReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiReq.UserId)
}
::std::string* CRegiReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CRegiReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CRegiReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CRegiReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiReq.UserId)
}

// string PassWord = 2;
void CRegiReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CRegiReq::password() const {
  // @@protoc_insertion_point(field_get:app.CRegiReq.PassWord)
  return password_.GetNoArena();
}
void CRegiReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiReq.PassWord)
}
#if LANG_CXX11
void CRegiReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiReq.PassWord)
}
#endif
void CRegiReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiReq.PassWord)
}
void CRegiReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiReq.PassWord)
}
::std::string* CRegiReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CRegiReq::release_password() {
  // @@protoc_insertion_point(field_release:app.CRegiReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CRegiReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiReq.PassWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoMsg::kMsgTypeFieldNumber;
const int CProtoMsg::kRegiReqFieldNumber;
const int CProtoMsg::kRegiRespFieldNumber;
const int CProtoMsg::kLoginReqFieldNumber;
const int CProtoMsg::kLoginRespFieldNumber;
const int CProtoMsg::kMsgReqFieldNumber;
const int CProtoMsg::kMsgRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoMsg::CProtoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:app.CProtoMsg)
}
CProtoMsg::CProtoMsg(const CProtoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_regireq()) {
    regireq_ = new ::app::CRegiReq(*from.regireq_);
  } else {
    regireq_ = NULL;
  }
  if (from.has_regiresp()) {
    regiresp_ = new ::app::CRegiResp(*from.regiresp_);
  } else {
    regiresp_ = NULL;
  }
  if (from.has_loginreq()) {
    loginreq_ = new ::app::CLoginReq(*from.loginreq_);
  } else {
    loginreq_ = NULL;
  }
  if (from.has_loginresp()) {
    loginresp_ = new ::app::CLoginResp(*from.loginresp_);
  } else {
    loginresp_ = NULL;
  }
  if (from.has_msgreq()) {
    msgreq_ = new ::app::CMsgReq(*from.msgreq_);
  } else {
    msgreq_ = NULL;
  }
  if (from.has_msgresp()) {
    msgresp_ = new ::app::CMsgResp(*from.msgresp_);
  } else {
    msgresp_ = NULL;
  }
  msgtype_ = from.msgtype_;
  // @@protoc_insertion_point(copy_constructor:app.CProtoMsg)
}

void CProtoMsg::SharedCtor() {
  ::memset(&regireq_, 0, reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&regireq_) + sizeof(msgtype_));
  _cached_size_ = 0;
}

CProtoMsg::~CProtoMsg() {
  // @@protoc_insertion_point(destructor:app.CProtoMsg)
  SharedDtor();
}

void CProtoMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete regireq_;
  }
  if (this != internal_default_instance()) {
    delete regiresp_;
  }
  if (this != internal_default_instance()) {
    delete loginreq_;
  }
  if (this != internal_default_instance()) {
    delete loginresp_;
  }
  if (this != internal_default_instance()) {
    delete msgreq_;
  }
  if (this != internal_default_instance()) {
    delete msgresp_;
  }
}

void CProtoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoMsg::descriptor() {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[6].descriptor;
}

const CProtoMsg& CProtoMsg::default_instance() {
  protobuf_interact_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoMsg* CProtoMsg::New(::google::protobuf::Arena* arena) const {
  CProtoMsg* n = new CProtoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:app.CProtoMsg)
  if (GetArenaNoVirtual() == NULL && regireq_ != NULL) {
    delete regireq_;
  }
  regireq_ = NULL;
  if (GetArenaNoVirtual() == NULL && regiresp_ != NULL) {
    delete regiresp_;
  }
  regiresp_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginreq_ != NULL) {
    delete loginreq_;
  }
  loginreq_ = NULL;
  if (GetArenaNoVirtual() == NULL && loginresp_ != NULL) {
    delete loginresp_;
  }
  loginresp_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgreq_ != NULL) {
    delete msgreq_;
  }
  msgreq_ = NULL;
  if (GetArenaNoVirtual() == NULL && msgresp_ != NULL) {
    delete msgresp_;
  }
  msgresp_ = NULL;
  msgtype_ = 0;
}

bool CProtoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:app.CProtoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 MsgType = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CRegiReq RegiReq = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_regireq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CRegiResp RegiResp = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_regiresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CLoginReq LoginReq = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CLoginResp LoginResp = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CMsgReq MsgReq = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgreq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .app.CMsgResp MsgResp = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:app.CProtoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:app.CProtoMsg)
  return false;
#undef DO_
}

void CProtoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:app.CProtoMsg)
  // int32 MsgType = 1;
  if (this->msgtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msgtype(), output);
  }

  // .app.CRegiReq RegiReq = 2;
  if (this->has_regireq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->regireq_, output);
  }

  // .app.CRegiResp RegiResp = 3;
  if (this->has_regiresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->regiresp_, output);
  }

  // .app.CLoginReq LoginReq = 4;
  if (this->has_loginreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->loginreq_, output);
  }

  // .app.CLoginResp LoginResp = 5;
  if (this->has_loginresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->loginresp_, output);
  }

  // .app.CMsgReq MsgReq = 6;
  if (this->has_msgreq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->msgreq_, output);
  }

  // .app.CMsgResp MsgResp = 7;
  if (this->has_msgresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->msgresp_, output);
  }

  // @@protoc_insertion_point(serialize_end:app.CProtoMsg)
}

::google::protobuf::uint8* CProtoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:app.CProtoMsg)
  // int32 MsgType = 1;
  if (this->msgtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msgtype(), target);
  }

  // .app.CRegiReq RegiReq = 2;
  if (this->has_regireq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->regireq_, false, target);
  }

  // .app.CRegiResp RegiResp = 3;
  if (this->has_regiresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->regiresp_, false, target);
  }

  // .app.CLoginReq LoginReq = 4;
  if (this->has_loginreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->loginreq_, false, target);
  }

  // .app.CLoginResp LoginResp = 5;
  if (this->has_loginresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->loginresp_, false, target);
  }

  // .app.CMsgReq MsgReq = 6;
  if (this->has_msgreq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->msgreq_, false, target);
  }

  // .app.CMsgResp MsgResp = 7;
  if (this->has_msgresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->msgresp_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:app.CProtoMsg)
  return target;
}

size_t CProtoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:app.CProtoMsg)
  size_t total_size = 0;

  // .app.CRegiReq RegiReq = 2;
  if (this->has_regireq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->regireq_);
  }

  // .app.CRegiResp RegiResp = 3;
  if (this->has_regiresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->regiresp_);
  }

  // .app.CLoginReq LoginReq = 4;
  if (this->has_loginreq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginreq_);
  }

  // .app.CLoginResp LoginResp = 5;
  if (this->has_loginresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loginresp_);
  }

  // .app.CMsgReq MsgReq = 6;
  if (this->has_msgreq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgreq_);
  }

  // .app.CMsgResp MsgResp = 7;
  if (this->has_msgresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msgresp_);
  }

  // int32 MsgType = 1;
  if (this->msgtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:app.CProtoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:app.CProtoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:app.CProtoMsg)
    MergeFrom(*source);
  }
}

void CProtoMsg::MergeFrom(const CProtoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:app.CProtoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_regireq()) {
    mutable_regireq()->::app::CRegiReq::MergeFrom(from.regireq());
  }
  if (from.has_regiresp()) {
    mutable_regiresp()->::app::CRegiResp::MergeFrom(from.regiresp());
  }
  if (from.has_loginreq()) {
    mutable_loginreq()->::app::CLoginReq::MergeFrom(from.loginreq());
  }
  if (from.has_loginresp()) {
    mutable_loginresp()->::app::CLoginResp::MergeFrom(from.loginresp());
  }
  if (from.has_msgreq()) {
    mutable_msgreq()->::app::CMsgReq::MergeFrom(from.msgreq());
  }
  if (from.has_msgresp()) {
    mutable_msgresp()->::app::CMsgResp::MergeFrom(from.msgresp());
  }
  if (from.msgtype() != 0) {
    set_msgtype(from.msgtype());
  }
}

void CProtoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:app.CProtoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoMsg::CopyFrom(const CProtoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:app.CProtoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoMsg::IsInitialized() const {
  return true;
}

void CProtoMsg::Swap(CProtoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoMsg::InternalSwap(CProtoMsg* other) {
  std::swap(regireq_, other->regireq_);
  std::swap(regiresp_, other->regiresp_);
  std::swap(loginreq_, other->loginreq_);
  std::swap(loginresp_, other->loginresp_);
  std::swap(msgreq_, other->msgreq_);
  std::swap(msgresp_, other->msgresp_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoMsg::GetMetadata() const {
  protobuf_interact_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoMsg

// int32 MsgType = 1;
void CProtoMsg::clear_msgtype() {
  msgtype_ = 0;
}
::google::protobuf::int32 CProtoMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgType)
  return msgtype_;
}
void CProtoMsg::set_msgtype(::google::protobuf::int32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:app.CProtoMsg.MsgType)
}

// .app.CRegiReq RegiReq = 2;
bool CProtoMsg::has_regireq() const {
  return this != internal_default_instance() && regireq_ != NULL;
}
void CProtoMsg::clear_regireq() {
  if (GetArenaNoVirtual() == NULL && regireq_ != NULL) delete regireq_;
  regireq_ = NULL;
}
const ::app::CRegiReq& CProtoMsg::regireq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.RegiReq)
  return regireq_ != NULL ? *regireq_
                         : *::app::CRegiReq::internal_default_instance();
}
::app::CRegiReq* CProtoMsg::mutable_regireq() {
  
  if (regireq_ == NULL) {
    regireq_ = new ::app::CRegiReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.RegiReq)
  return regireq_;
}
::app::CRegiReq* CProtoMsg::release_regireq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.RegiReq)
  
  ::app::CRegiReq* temp = regireq_;
  regireq_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_regireq(::app::CRegiReq* regireq) {
  delete regireq_;
  regireq_ = regireq;
  if (regireq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.RegiReq)
}

// .app.CRegiResp RegiResp = 3;
bool CProtoMsg::has_regiresp() const {
  return this != internal_default_instance() && regiresp_ != NULL;
}
void CProtoMsg::clear_regiresp() {
  if (GetArenaNoVirtual() == NULL && regiresp_ != NULL) delete regiresp_;
  regiresp_ = NULL;
}
const ::app::CRegiResp& CProtoMsg::regiresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.RegiResp)
  return regiresp_ != NULL ? *regiresp_
                         : *::app::CRegiResp::internal_default_instance();
}
::app::CRegiResp* CProtoMsg::mutable_regiresp() {
  
  if (regiresp_ == NULL) {
    regiresp_ = new ::app::CRegiResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.RegiResp)
  return regiresp_;
}
::app::CRegiResp* CProtoMsg::release_regiresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.RegiResp)
  
  ::app::CRegiResp* temp = regiresp_;
  regiresp_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_regiresp(::app::CRegiResp* regiresp) {
  delete regiresp_;
  regiresp_ = regiresp;
  if (regiresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.RegiResp)
}

// .app.CLoginReq LoginReq = 4;
bool CProtoMsg::has_loginreq() const {
  return this != internal_default_instance() && loginreq_ != NULL;
}
void CProtoMsg::clear_loginreq() {
  if (GetArenaNoVirtual() == NULL && loginreq_ != NULL) delete loginreq_;
  loginreq_ = NULL;
}
const ::app::CLoginReq& CProtoMsg::loginreq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.LoginReq)
  return loginreq_ != NULL ? *loginreq_
                         : *::app::CLoginReq::internal_default_instance();
}
::app::CLoginReq* CProtoMsg::mutable_loginreq() {
  
  if (loginreq_ == NULL) {
    loginreq_ = new ::app::CLoginReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.LoginReq)
  return loginreq_;
}
::app::CLoginReq* CProtoMsg::release_loginreq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.LoginReq)
  
  ::app::CLoginReq* temp = loginreq_;
  loginreq_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_loginreq(::app::CLoginReq* loginreq) {
  delete loginreq_;
  loginreq_ = loginreq;
  if (loginreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.LoginReq)
}

// .app.CLoginResp LoginResp = 5;
bool CProtoMsg::has_loginresp() const {
  return this != internal_default_instance() && loginresp_ != NULL;
}
void CProtoMsg::clear_loginresp() {
  if (GetArenaNoVirtual() == NULL && loginresp_ != NULL) delete loginresp_;
  loginresp_ = NULL;
}
const ::app::CLoginResp& CProtoMsg::loginresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.LoginResp)
  return loginresp_ != NULL ? *loginresp_
                         : *::app::CLoginResp::internal_default_instance();
}
::app::CLoginResp* CProtoMsg::mutable_loginresp() {
  
  if (loginresp_ == NULL) {
    loginresp_ = new ::app::CLoginResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.LoginResp)
  return loginresp_;
}
::app::CLoginResp* CProtoMsg::release_loginresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.LoginResp)
  
  ::app::CLoginResp* temp = loginresp_;
  loginresp_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_loginresp(::app::CLoginResp* loginresp) {
  delete loginresp_;
  loginresp_ = loginresp;
  if (loginresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.LoginResp)
}

// .app.CMsgReq MsgReq = 6;
bool CProtoMsg::has_msgreq() const {
  return this != internal_default_instance() && msgreq_ != NULL;
}
void CProtoMsg::clear_msgreq() {
  if (GetArenaNoVirtual() == NULL && msgreq_ != NULL) delete msgreq_;
  msgreq_ = NULL;
}
const ::app::CMsgReq& CProtoMsg::msgreq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgReq)
  return msgreq_ != NULL ? *msgreq_
                         : *::app::CMsgReq::internal_default_instance();
}
::app::CMsgReq* CProtoMsg::mutable_msgreq() {
  
  if (msgreq_ == NULL) {
    msgreq_ = new ::app::CMsgReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.MsgReq)
  return msgreq_;
}
::app::CMsgReq* CProtoMsg::release_msgreq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.MsgReq)
  
  ::app::CMsgReq* temp = msgreq_;
  msgreq_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_msgreq(::app::CMsgReq* msgreq) {
  delete msgreq_;
  msgreq_ = msgreq;
  if (msgreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.MsgReq)
}

// .app.CMsgResp MsgResp = 7;
bool CProtoMsg::has_msgresp() const {
  return this != internal_default_instance() && msgresp_ != NULL;
}
void CProtoMsg::clear_msgresp() {
  if (GetArenaNoVirtual() == NULL && msgresp_ != NULL) delete msgresp_;
  msgresp_ = NULL;
}
const ::app::CMsgResp& CProtoMsg::msgresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgResp)
  return msgresp_ != NULL ? *msgresp_
                         : *::app::CMsgResp::internal_default_instance();
}
::app::CMsgResp* CProtoMsg::mutable_msgresp() {
  
  if (msgresp_ == NULL) {
    msgresp_ = new ::app::CMsgResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.MsgResp)
  return msgresp_;
}
::app::CMsgResp* CProtoMsg::release_msgresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.MsgResp)
  
  ::app::CMsgResp* temp = msgresp_;
  msgresp_ = NULL;
  return temp;
}
void CProtoMsg::set_allocated_msgresp(::app::CMsgResp* msgresp) {
  delete msgresp_;
  msgresp_ = msgresp;
  if (msgresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.MsgResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace app

// @@protoc_insertion_point(global_scope)
