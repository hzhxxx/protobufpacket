// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interact.proto

#ifndef PROTOBUF_interact_2eproto__INCLUDED
#define PROTOBUF_interact_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace app {
class CLoginReq;
class CLoginReqDefaultTypeInternal;
extern CLoginReqDefaultTypeInternal _CLoginReq_default_instance_;
class CLoginResp;
class CLoginRespDefaultTypeInternal;
extern CLoginRespDefaultTypeInternal _CLoginResp_default_instance_;
class CMsgReq;
class CMsgReqDefaultTypeInternal;
extern CMsgReqDefaultTypeInternal _CMsgReq_default_instance_;
class CMsgResp;
class CMsgRespDefaultTypeInternal;
extern CMsgRespDefaultTypeInternal _CMsgResp_default_instance_;
class CProtoMsg;
class CProtoMsgDefaultTypeInternal;
extern CProtoMsgDefaultTypeInternal _CProtoMsg_default_instance_;
class CRegiReq;
class CRegiReqDefaultTypeInternal;
extern CRegiReqDefaultTypeInternal _CRegiReq_default_instance_;
class CRegiResp;
class CRegiRespDefaultTypeInternal;
extern CRegiRespDefaultTypeInternal _CRegiResp_default_instance_;
}  // namespace app

namespace app {

namespace protobuf_interact_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_interact_2eproto

// ===================================================================

class CMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CMsgResp) */ {
 public:
  CMsgResp();
  virtual ~CMsgResp();

  CMsgResp(const CMsgResp& from);

  inline CMsgResp& operator=(const CMsgResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResp& default_instance();

  static inline const CMsgResp* internal_default_instance() {
    return reinterpret_cast<const CMsgResp*>(
               &_CMsgResp_default_instance_);
  }

  void Swap(CMsgResp* other);

  // implements Message ----------------------------------------------

  inline CMsgResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgResp& from);
  void MergeFrom(const CMsgResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string MsgAck = 3;
  void clear_msgack();
  static const int kMsgAckFieldNumber = 3;
  const ::std::string& msgack() const;
  void set_msgack(const ::std::string& value);
  #if LANG_CXX11
  void set_msgack(::std::string&& value);
  #endif
  void set_msgack(const char* value);
  void set_msgack(const char* value, size_t size);
  ::std::string* mutable_msgack();
  ::std::string* release_msgack();
  void set_allocated_msgack(::std::string* msgack);

  // int32 Result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.CMsgResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr msgack_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CMsgReq) */ {
 public:
  CMsgReq();
  virtual ~CMsgReq();

  CMsgReq(const CMsgReq& from);

  inline CMsgReq& operator=(const CMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReq& default_instance();

  static inline const CMsgReq* internal_default_instance() {
    return reinterpret_cast<const CMsgReq*>(
               &_CMsgReq_default_instance_);
  }

  void Swap(CMsgReq* other);

  // implements Message ----------------------------------------------

  inline CMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgReq& from);
  void MergeFrom(const CMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string MsgContent = 2;
  void clear_msgcontent();
  static const int kMsgContentFieldNumber = 2;
  const ::std::string& msgcontent() const;
  void set_msgcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_msgcontent(::std::string&& value);
  #endif
  void set_msgcontent(const char* value);
  void set_msgcontent(const char* value, size_t size);
  ::std::string* mutable_msgcontent();
  ::std::string* release_msgcontent();
  void set_allocated_msgcontent(::std::string* msgcontent);

  // @@protoc_insertion_point(class_scope:app.CMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr msgcontent_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CLoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CLoginResp) */ {
 public:
  CLoginResp();
  virtual ~CLoginResp();

  CLoginResp(const CLoginResp& from);

  inline CLoginResp& operator=(const CLoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLoginResp& default_instance();

  static inline const CLoginResp* internal_default_instance() {
    return reinterpret_cast<const CLoginResp*>(
               &_CLoginResp_default_instance_);
  }

  void Swap(CLoginResp* other);

  // implements Message ----------------------------------------------

  inline CLoginResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CLoginResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CLoginResp& from);
  void MergeFrom(const CLoginResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CLoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string LoginMsg = 2;
  void clear_loginmsg();
  static const int kLoginMsgFieldNumber = 2;
  const ::std::string& loginmsg() const;
  void set_loginmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_loginmsg(::std::string&& value);
  #endif
  void set_loginmsg(const char* value);
  void set_loginmsg(const char* value, size_t size);
  ::std::string* mutable_loginmsg();
  ::std::string* release_loginmsg();
  void set_allocated_loginmsg(::std::string* loginmsg);

  // int32 LoginResult = 1;
  void clear_loginresult();
  static const int kLoginResultFieldNumber = 1;
  ::google::protobuf::int32 loginresult() const;
  void set_loginresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.CLoginResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr loginmsg_;
  ::google::protobuf::int32 loginresult_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CLoginReq) */ {
 public:
  CLoginReq();
  virtual ~CLoginReq();

  CLoginReq(const CLoginReq& from);

  inline CLoginReq& operator=(const CLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLoginReq& default_instance();

  static inline const CLoginReq* internal_default_instance() {
    return reinterpret_cast<const CLoginReq*>(
               &_CLoginReq_default_instance_);
  }

  void Swap(CLoginReq* other);

  // implements Message ----------------------------------------------

  inline CLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CLoginReq& from);
  void MergeFrom(const CLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string PassWord = 2;
  void clear_password();
  static const int kPassWordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:app.CLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CRegiResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CRegiResp) */ {
 public:
  CRegiResp();
  virtual ~CRegiResp();

  CRegiResp(const CRegiResp& from);

  inline CRegiResp& operator=(const CRegiResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegiResp& default_instance();

  static inline const CRegiResp* internal_default_instance() {
    return reinterpret_cast<const CRegiResp*>(
               &_CRegiResp_default_instance_);
  }

  void Swap(CRegiResp* other);

  // implements Message ----------------------------------------------

  inline CRegiResp* New() const PROTOBUF_FINAL { return New(NULL); }

  CRegiResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CRegiResp& from);
  void MergeFrom(const CRegiResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CRegiResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string RegisterMsg = 2;
  void clear_registermsg();
  static const int kRegisterMsgFieldNumber = 2;
  const ::std::string& registermsg() const;
  void set_registermsg(const ::std::string& value);
  #if LANG_CXX11
  void set_registermsg(::std::string&& value);
  #endif
  void set_registermsg(const char* value);
  void set_registermsg(const char* value, size_t size);
  ::std::string* mutable_registermsg();
  ::std::string* release_registermsg();
  void set_allocated_registermsg(::std::string* registermsg);

  // int32 RegisterResult = 1;
  void clear_registerresult();
  static const int kRegisterResultFieldNumber = 1;
  ::google::protobuf::int32 registerresult() const;
  void set_registerresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.CRegiResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr registermsg_;
  ::google::protobuf::int32 registerresult_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CRegiReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CRegiReq) */ {
 public:
  CRegiReq();
  virtual ~CRegiReq();

  CRegiReq(const CRegiReq& from);

  inline CRegiReq& operator=(const CRegiReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CRegiReq& default_instance();

  static inline const CRegiReq* internal_default_instance() {
    return reinterpret_cast<const CRegiReq*>(
               &_CRegiReq_default_instance_);
  }

  void Swap(CRegiReq* other);

  // implements Message ----------------------------------------------

  inline CRegiReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CRegiReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CRegiReq& from);
  void MergeFrom(const CRegiReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CRegiReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string UserId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string PassWord = 2;
  void clear_password();
  static const int kPassWordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:app.CRegiReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CProtoMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:app.CProtoMsg) */ {
 public:
  CProtoMsg();
  virtual ~CProtoMsg();

  CProtoMsg(const CProtoMsg& from);

  inline CProtoMsg& operator=(const CProtoMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CProtoMsg& default_instance();

  static inline const CProtoMsg* internal_default_instance() {
    return reinterpret_cast<const CProtoMsg*>(
               &_CProtoMsg_default_instance_);
  }

  void Swap(CProtoMsg* other);

  // implements Message ----------------------------------------------

  inline CProtoMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CProtoMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CProtoMsg& from);
  void MergeFrom(const CProtoMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CProtoMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .app.CRegiReq RegiReq = 2;
  bool has_regireq() const;
  void clear_regireq();
  static const int kRegiReqFieldNumber = 2;
  const ::app::CRegiReq& regireq() const;
  ::app::CRegiReq* mutable_regireq();
  ::app::CRegiReq* release_regireq();
  void set_allocated_regireq(::app::CRegiReq* regireq);

  // .app.CRegiResp RegiResp = 3;
  bool has_regiresp() const;
  void clear_regiresp();
  static const int kRegiRespFieldNumber = 3;
  const ::app::CRegiResp& regiresp() const;
  ::app::CRegiResp* mutable_regiresp();
  ::app::CRegiResp* release_regiresp();
  void set_allocated_regiresp(::app::CRegiResp* regiresp);

  // .app.CLoginReq LoginReq = 4;
  bool has_loginreq() const;
  void clear_loginreq();
  static const int kLoginReqFieldNumber = 4;
  const ::app::CLoginReq& loginreq() const;
  ::app::CLoginReq* mutable_loginreq();
  ::app::CLoginReq* release_loginreq();
  void set_allocated_loginreq(::app::CLoginReq* loginreq);

  // .app.CLoginResp LoginResp = 5;
  bool has_loginresp() const;
  void clear_loginresp();
  static const int kLoginRespFieldNumber = 5;
  const ::app::CLoginResp& loginresp() const;
  ::app::CLoginResp* mutable_loginresp();
  ::app::CLoginResp* release_loginresp();
  void set_allocated_loginresp(::app::CLoginResp* loginresp);

  // .app.CMsgReq MsgReq = 6;
  bool has_msgreq() const;
  void clear_msgreq();
  static const int kMsgReqFieldNumber = 6;
  const ::app::CMsgReq& msgreq() const;
  ::app::CMsgReq* mutable_msgreq();
  ::app::CMsgReq* release_msgreq();
  void set_allocated_msgreq(::app::CMsgReq* msgreq);

  // .app.CMsgResp MsgResp = 7;
  bool has_msgresp() const;
  void clear_msgresp();
  static const int kMsgRespFieldNumber = 7;
  const ::app::CMsgResp& msgresp() const;
  ::app::CMsgResp* mutable_msgresp();
  ::app::CMsgResp* release_msgresp();
  void set_allocated_msgresp(::app::CMsgResp* msgresp);

  // int32 MsgType = 1;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 1;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.CProtoMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::app::CRegiReq* regireq_;
  ::app::CRegiResp* regiresp_;
  ::app::CLoginReq* loginreq_;
  ::app::CLoginResp* loginresp_;
  ::app::CMsgReq* msgreq_;
  ::app::CMsgResp* msgresp_;
  ::google::protobuf::int32 msgtype_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgResp

// string UserId = 1;
inline void CMsgResp::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMsgResp::userid() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.UserId)
  return userid_.GetNoArena();
}
inline void CMsgResp::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgResp.UserId)
}
#if LANG_CXX11
inline void CMsgResp::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgResp.UserId)
}
#endif
inline void CMsgResp::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgResp.UserId)
}
inline void CMsgResp::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgResp.UserId)
}
inline ::std::string* CMsgResp::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgResp.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgResp::release_userid() {
  // @@protoc_insertion_point(field_release:app.CMsgResp.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgResp::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgResp.UserId)
}

// int32 Result = 2;
inline void CMsgResp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 CMsgResp::result() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.Result)
  return result_;
}
inline void CMsgResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:app.CMsgResp.Result)
}

// string MsgAck = 3;
inline void CMsgResp::clear_msgack() {
  msgack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMsgResp::msgack() const {
  // @@protoc_insertion_point(field_get:app.CMsgResp.MsgAck)
  return msgack_.GetNoArena();
}
inline void CMsgResp::set_msgack(const ::std::string& value) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgResp.MsgAck)
}
#if LANG_CXX11
inline void CMsgResp::set_msgack(::std::string&& value) {
  
  msgack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgResp.MsgAck)
}
#endif
inline void CMsgResp::set_msgack(const char* value) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgResp.MsgAck)
}
inline void CMsgResp::set_msgack(const char* value, size_t size) {
  
  msgack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgResp.MsgAck)
}
inline ::std::string* CMsgResp::mutable_msgack() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgResp.MsgAck)
  return msgack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgResp::release_msgack() {
  // @@protoc_insertion_point(field_release:app.CMsgResp.MsgAck)
  
  return msgack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgResp::set_allocated_msgack(::std::string* msgack) {
  if (msgack != NULL) {
    
  } else {
    
  }
  msgack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgack);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgResp.MsgAck)
}

// -------------------------------------------------------------------

// CMsgReq

// string UserId = 1;
inline void CMsgReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMsgReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CMsgReq.UserId)
  return userid_.GetNoArena();
}
inline void CMsgReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgReq.UserId)
}
#if LANG_CXX11
inline void CMsgReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgReq.UserId)
}
#endif
inline void CMsgReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgReq.UserId)
}
inline void CMsgReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgReq.UserId)
}
inline ::std::string* CMsgReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CMsgReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgReq.UserId)
}

// string MsgContent = 2;
inline void CMsgReq::clear_msgcontent() {
  msgcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CMsgReq::msgcontent() const {
  // @@protoc_insertion_point(field_get:app.CMsgReq.MsgContent)
  return msgcontent_.GetNoArena();
}
inline void CMsgReq::set_msgcontent(const ::std::string& value) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CMsgReq.MsgContent)
}
#if LANG_CXX11
inline void CMsgReq::set_msgcontent(::std::string&& value) {
  
  msgcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CMsgReq.MsgContent)
}
#endif
inline void CMsgReq::set_msgcontent(const char* value) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CMsgReq.MsgContent)
}
inline void CMsgReq::set_msgcontent(const char* value, size_t size) {
  
  msgcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CMsgReq.MsgContent)
}
inline ::std::string* CMsgReq::mutable_msgcontent() {
  
  // @@protoc_insertion_point(field_mutable:app.CMsgReq.MsgContent)
  return msgcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgReq::release_msgcontent() {
  // @@protoc_insertion_point(field_release:app.CMsgReq.MsgContent)
  
  return msgcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgReq::set_allocated_msgcontent(::std::string* msgcontent) {
  if (msgcontent != NULL) {
    
  } else {
    
  }
  msgcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgcontent);
  // @@protoc_insertion_point(field_set_allocated:app.CMsgReq.MsgContent)
}

// -------------------------------------------------------------------

// CLoginResp

// int32 LoginResult = 1;
inline void CLoginResp::clear_loginresult() {
  loginresult_ = 0;
}
inline ::google::protobuf::int32 CLoginResp::loginresult() const {
  // @@protoc_insertion_point(field_get:app.CLoginResp.LoginResult)
  return loginresult_;
}
inline void CLoginResp::set_loginresult(::google::protobuf::int32 value) {
  
  loginresult_ = value;
  // @@protoc_insertion_point(field_set:app.CLoginResp.LoginResult)
}

// string LoginMsg = 2;
inline void CLoginResp::clear_loginmsg() {
  loginmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CLoginResp::loginmsg() const {
  // @@protoc_insertion_point(field_get:app.CLoginResp.LoginMsg)
  return loginmsg_.GetNoArena();
}
inline void CLoginResp::set_loginmsg(const ::std::string& value) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginResp.LoginMsg)
}
#if LANG_CXX11
inline void CLoginResp::set_loginmsg(::std::string&& value) {
  
  loginmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginResp.LoginMsg)
}
#endif
inline void CLoginResp::set_loginmsg(const char* value) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginResp.LoginMsg)
}
inline void CLoginResp::set_loginmsg(const char* value, size_t size) {
  
  loginmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginResp.LoginMsg)
}
inline ::std::string* CLoginResp::mutable_loginmsg() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginResp.LoginMsg)
  return loginmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CLoginResp::release_loginmsg() {
  // @@protoc_insertion_point(field_release:app.CLoginResp.LoginMsg)
  
  return loginmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CLoginResp::set_allocated_loginmsg(::std::string* loginmsg) {
  if (loginmsg != NULL) {
    
  } else {
    
  }
  loginmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loginmsg);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginResp.LoginMsg)
}

// -------------------------------------------------------------------

// CLoginReq

// string UserId = 1;
inline void CLoginReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CLoginReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CLoginReq.UserId)
  return userid_.GetNoArena();
}
inline void CLoginReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginReq.UserId)
}
#if LANG_CXX11
inline void CLoginReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginReq.UserId)
}
#endif
inline void CLoginReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginReq.UserId)
}
inline void CLoginReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginReq.UserId)
}
inline ::std::string* CLoginReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CLoginReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CLoginReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CLoginReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginReq.UserId)
}

// string PassWord = 2;
inline void CLoginReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CLoginReq::password() const {
  // @@protoc_insertion_point(field_get:app.CLoginReq.PassWord)
  return password_.GetNoArena();
}
inline void CLoginReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CLoginReq.PassWord)
}
#if LANG_CXX11
inline void CLoginReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CLoginReq.PassWord)
}
#endif
inline void CLoginReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CLoginReq.PassWord)
}
inline void CLoginReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CLoginReq.PassWord)
}
inline ::std::string* CLoginReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:app.CLoginReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CLoginReq::release_password() {
  // @@protoc_insertion_point(field_release:app.CLoginReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CLoginReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:app.CLoginReq.PassWord)
}

// -------------------------------------------------------------------

// CRegiResp

// int32 RegisterResult = 1;
inline void CRegiResp::clear_registerresult() {
  registerresult_ = 0;
}
inline ::google::protobuf::int32 CRegiResp::registerresult() const {
  // @@protoc_insertion_point(field_get:app.CRegiResp.RegisterResult)
  return registerresult_;
}
inline void CRegiResp::set_registerresult(::google::protobuf::int32 value) {
  
  registerresult_ = value;
  // @@protoc_insertion_point(field_set:app.CRegiResp.RegisterResult)
}

// string RegisterMsg = 2;
inline void CRegiResp::clear_registermsg() {
  registermsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CRegiResp::registermsg() const {
  // @@protoc_insertion_point(field_get:app.CRegiResp.RegisterMsg)
  return registermsg_.GetNoArena();
}
inline void CRegiResp::set_registermsg(const ::std::string& value) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiResp.RegisterMsg)
}
#if LANG_CXX11
inline void CRegiResp::set_registermsg(::std::string&& value) {
  
  registermsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiResp.RegisterMsg)
}
#endif
inline void CRegiResp::set_registermsg(const char* value) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiResp.RegisterMsg)
}
inline void CRegiResp::set_registermsg(const char* value, size_t size) {
  
  registermsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiResp.RegisterMsg)
}
inline ::std::string* CRegiResp::mutable_registermsg() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiResp.RegisterMsg)
  return registermsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRegiResp::release_registermsg() {
  // @@protoc_insertion_point(field_release:app.CRegiResp.RegisterMsg)
  
  return registermsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRegiResp::set_allocated_registermsg(::std::string* registermsg) {
  if (registermsg != NULL) {
    
  } else {
    
  }
  registermsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), registermsg);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiResp.RegisterMsg)
}

// -------------------------------------------------------------------

// CRegiReq

// string UserId = 1;
inline void CRegiReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CRegiReq::userid() const {
  // @@protoc_insertion_point(field_get:app.CRegiReq.UserId)
  return userid_.GetNoArena();
}
inline void CRegiReq::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiReq.UserId)
}
#if LANG_CXX11
inline void CRegiReq::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiReq.UserId)
}
#endif
inline void CRegiReq::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiReq.UserId)
}
inline void CRegiReq::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiReq.UserId)
}
inline ::std::string* CRegiReq::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiReq.UserId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRegiReq::release_userid() {
  // @@protoc_insertion_point(field_release:app.CRegiReq.UserId)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRegiReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiReq.UserId)
}

// string PassWord = 2;
inline void CRegiReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CRegiReq::password() const {
  // @@protoc_insertion_point(field_get:app.CRegiReq.PassWord)
  return password_.GetNoArena();
}
inline void CRegiReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:app.CRegiReq.PassWord)
}
#if LANG_CXX11
inline void CRegiReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:app.CRegiReq.PassWord)
}
#endif
inline void CRegiReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:app.CRegiReq.PassWord)
}
inline void CRegiReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:app.CRegiReq.PassWord)
}
inline ::std::string* CRegiReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:app.CRegiReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CRegiReq::release_password() {
  // @@protoc_insertion_point(field_release:app.CRegiReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CRegiReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:app.CRegiReq.PassWord)
}

// -------------------------------------------------------------------

// CProtoMsg

// int32 MsgType = 1;
inline void CProtoMsg::clear_msgtype() {
  msgtype_ = 0;
}
inline ::google::protobuf::int32 CProtoMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgType)
  return msgtype_;
}
inline void CProtoMsg::set_msgtype(::google::protobuf::int32 value) {
  
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:app.CProtoMsg.MsgType)
}

// .app.CRegiReq RegiReq = 2;
inline bool CProtoMsg::has_regireq() const {
  return this != internal_default_instance() && regireq_ != NULL;
}
inline void CProtoMsg::clear_regireq() {
  if (GetArenaNoVirtual() == NULL && regireq_ != NULL) delete regireq_;
  regireq_ = NULL;
}
inline const ::app::CRegiReq& CProtoMsg::regireq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.RegiReq)
  return regireq_ != NULL ? *regireq_
                         : *::app::CRegiReq::internal_default_instance();
}
inline ::app::CRegiReq* CProtoMsg::mutable_regireq() {
  
  if (regireq_ == NULL) {
    regireq_ = new ::app::CRegiReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.RegiReq)
  return regireq_;
}
inline ::app::CRegiReq* CProtoMsg::release_regireq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.RegiReq)
  
  ::app::CRegiReq* temp = regireq_;
  regireq_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_regireq(::app::CRegiReq* regireq) {
  delete regireq_;
  regireq_ = regireq;
  if (regireq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.RegiReq)
}

// .app.CRegiResp RegiResp = 3;
inline bool CProtoMsg::has_regiresp() const {
  return this != internal_default_instance() && regiresp_ != NULL;
}
inline void CProtoMsg::clear_regiresp() {
  if (GetArenaNoVirtual() == NULL && regiresp_ != NULL) delete regiresp_;
  regiresp_ = NULL;
}
inline const ::app::CRegiResp& CProtoMsg::regiresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.RegiResp)
  return regiresp_ != NULL ? *regiresp_
                         : *::app::CRegiResp::internal_default_instance();
}
inline ::app::CRegiResp* CProtoMsg::mutable_regiresp() {
  
  if (regiresp_ == NULL) {
    regiresp_ = new ::app::CRegiResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.RegiResp)
  return regiresp_;
}
inline ::app::CRegiResp* CProtoMsg::release_regiresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.RegiResp)
  
  ::app::CRegiResp* temp = regiresp_;
  regiresp_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_regiresp(::app::CRegiResp* regiresp) {
  delete regiresp_;
  regiresp_ = regiresp;
  if (regiresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.RegiResp)
}

// .app.CLoginReq LoginReq = 4;
inline bool CProtoMsg::has_loginreq() const {
  return this != internal_default_instance() && loginreq_ != NULL;
}
inline void CProtoMsg::clear_loginreq() {
  if (GetArenaNoVirtual() == NULL && loginreq_ != NULL) delete loginreq_;
  loginreq_ = NULL;
}
inline const ::app::CLoginReq& CProtoMsg::loginreq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.LoginReq)
  return loginreq_ != NULL ? *loginreq_
                         : *::app::CLoginReq::internal_default_instance();
}
inline ::app::CLoginReq* CProtoMsg::mutable_loginreq() {
  
  if (loginreq_ == NULL) {
    loginreq_ = new ::app::CLoginReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.LoginReq)
  return loginreq_;
}
inline ::app::CLoginReq* CProtoMsg::release_loginreq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.LoginReq)
  
  ::app::CLoginReq* temp = loginreq_;
  loginreq_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_loginreq(::app::CLoginReq* loginreq) {
  delete loginreq_;
  loginreq_ = loginreq;
  if (loginreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.LoginReq)
}

// .app.CLoginResp LoginResp = 5;
inline bool CProtoMsg::has_loginresp() const {
  return this != internal_default_instance() && loginresp_ != NULL;
}
inline void CProtoMsg::clear_loginresp() {
  if (GetArenaNoVirtual() == NULL && loginresp_ != NULL) delete loginresp_;
  loginresp_ = NULL;
}
inline const ::app::CLoginResp& CProtoMsg::loginresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.LoginResp)
  return loginresp_ != NULL ? *loginresp_
                         : *::app::CLoginResp::internal_default_instance();
}
inline ::app::CLoginResp* CProtoMsg::mutable_loginresp() {
  
  if (loginresp_ == NULL) {
    loginresp_ = new ::app::CLoginResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.LoginResp)
  return loginresp_;
}
inline ::app::CLoginResp* CProtoMsg::release_loginresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.LoginResp)
  
  ::app::CLoginResp* temp = loginresp_;
  loginresp_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_loginresp(::app::CLoginResp* loginresp) {
  delete loginresp_;
  loginresp_ = loginresp;
  if (loginresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.LoginResp)
}

// .app.CMsgReq MsgReq = 6;
inline bool CProtoMsg::has_msgreq() const {
  return this != internal_default_instance() && msgreq_ != NULL;
}
inline void CProtoMsg::clear_msgreq() {
  if (GetArenaNoVirtual() == NULL && msgreq_ != NULL) delete msgreq_;
  msgreq_ = NULL;
}
inline const ::app::CMsgReq& CProtoMsg::msgreq() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgReq)
  return msgreq_ != NULL ? *msgreq_
                         : *::app::CMsgReq::internal_default_instance();
}
inline ::app::CMsgReq* CProtoMsg::mutable_msgreq() {
  
  if (msgreq_ == NULL) {
    msgreq_ = new ::app::CMsgReq;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.MsgReq)
  return msgreq_;
}
inline ::app::CMsgReq* CProtoMsg::release_msgreq() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.MsgReq)
  
  ::app::CMsgReq* temp = msgreq_;
  msgreq_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_msgreq(::app::CMsgReq* msgreq) {
  delete msgreq_;
  msgreq_ = msgreq;
  if (msgreq) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.MsgReq)
}

// .app.CMsgResp MsgResp = 7;
inline bool CProtoMsg::has_msgresp() const {
  return this != internal_default_instance() && msgresp_ != NULL;
}
inline void CProtoMsg::clear_msgresp() {
  if (GetArenaNoVirtual() == NULL && msgresp_ != NULL) delete msgresp_;
  msgresp_ = NULL;
}
inline const ::app::CMsgResp& CProtoMsg::msgresp() const {
  // @@protoc_insertion_point(field_get:app.CProtoMsg.MsgResp)
  return msgresp_ != NULL ? *msgresp_
                         : *::app::CMsgResp::internal_default_instance();
}
inline ::app::CMsgResp* CProtoMsg::mutable_msgresp() {
  
  if (msgresp_ == NULL) {
    msgresp_ = new ::app::CMsgResp;
  }
  // @@protoc_insertion_point(field_mutable:app.CProtoMsg.MsgResp)
  return msgresp_;
}
inline ::app::CMsgResp* CProtoMsg::release_msgresp() {
  // @@protoc_insertion_point(field_release:app.CProtoMsg.MsgResp)
  
  ::app::CMsgResp* temp = msgresp_;
  msgresp_ = NULL;
  return temp;
}
inline void CProtoMsg::set_allocated_msgresp(::app::CMsgResp* msgresp) {
  delete msgresp_;
  msgresp_ = msgresp;
  if (msgresp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:app.CProtoMsg.MsgResp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace app

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_interact_2eproto__INCLUDED
