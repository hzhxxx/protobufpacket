// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interact_door.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "interact_door.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace door {
class OpenDoorReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OpenDoorReq> {
} _OpenDoorReq_default_instance_;
class OpenDoorRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OpenDoorResp> {
} _OpenDoorResp_default_instance_;
class UpgradeReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpgradeReq> {
} _UpgradeReq_default_instance_;
class UpgradeRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpgradeResp> {
} _UpgradeResp_default_instance_;
class UpdateDynamicPWReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateDynamicPWReq> {
} _UpdateDynamicPWReq_default_instance_;
class UpdateDynamicPWRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateDynamicPWResp> {
} _UpdateDynamicPWResp_default_instance_;
class ConnectReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConnectReq> {
} _ConnectReq_default_instance_;
class ConnectReqRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ConnectReqResp> {
} _ConnectReqResp_default_instance_;
class JsonHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JsonHead> {
} _JsonHead_default_instance_;

namespace protobuf_interact_5fdoor_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorReq, doorid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenDoorResp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeReq, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeReq, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, describe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeResp, checksum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWReq, doorid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWResp, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWResp, passwords_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateDynamicPWResp, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectReq, doorid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectReqResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectReqResp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectReqResp, errmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, namelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, typename__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, protocolbufdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonHead, checksum_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(OpenDoorReq)},
  { 6, -1, sizeof(OpenDoorResp)},
  { 12, -1, sizeof(UpgradeReq)},
  { 18, -1, sizeof(UpgradeResp)},
  { 28, -1, sizeof(UpdateDynamicPWReq)},
  { 33, -1, sizeof(UpdateDynamicPWResp)},
  { 41, -1, sizeof(ConnectReq)},
  { 46, -1, sizeof(ConnectReqResp)},
  { 52, -1, sizeof(JsonHead)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenDoorReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenDoorResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpgradeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpgradeResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateDynamicPWReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateDynamicPWResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectReqResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JsonHead_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "interact_door.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _OpenDoorReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OpenDoorResp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _UpgradeReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _UpgradeResp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _UpdateDynamicPWReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UpdateDynamicPWResp_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ConnectReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ConnectReqResp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _JsonHead_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _OpenDoorReq_default_instance_.DefaultConstruct();
  _OpenDoorResp_default_instance_.DefaultConstruct();
  _UpgradeReq_default_instance_.DefaultConstruct();
  _UpgradeResp_default_instance_.DefaultConstruct();
  _UpdateDynamicPWReq_default_instance_.DefaultConstruct();
  _UpdateDynamicPWResp_default_instance_.DefaultConstruct();
  _ConnectReq_default_instance_.DefaultConstruct();
  _ConnectReqResp_default_instance_.DefaultConstruct();
  _JsonHead_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023interact_door.proto\022\004door\"/\n\013OpenDoorR"
      "eq\022\020\n\010PassWord\030\001 \001(\t\022\016\n\006DoorID\030\002 \001(\t\".\n\014"
      "OpenDoorResp\022\016\n\006Result\030\001 \001(\005\022\016\n\006ErrMsg\030\002"
      " \001(\t\".\n\nUpgradeReq\022\017\n\007AppName\030\001 \001(\t\022\017\n\007V"
      "ersion\030\002 \001(\005\"l\n\013UpgradeResp\022\016\n\006Result\030\001 "
      "\001(\005\022\016\n\006ErrMsg\030\002 \001(\t\022\020\n\010Describe\030\003 \001(\t\022\013\n"
      "\003Url\030\004 \001(\t\022\014\n\004Type\030\005 \001(\005\022\020\n\010checksum\030\006 \001"
      "(\t\"$\n\022UpdateDynamicPWReq\022\016\n\006DoorID\030\001 \001(\t"
      "\"V\n\023UpdateDynamicPWResp\022\016\n\006Result\030\001 \001(\005\022"
      "\016\n\006ErrMsg\030\002 \001(\t\022\021\n\tPassWords\030\003 \003(\t\022\014\n\004Ti"
      "me\030\004 \003(\005\"\034\n\nConnectReq\022\016\n\006DoorID\030\001 \001(\t\"0"
      "\n\016ConnectReqResp\022\016\n\006Result\030\001 \001(\005\022\016\n\006ErrM"
      "sg\030\002 \001(\t\"y\n\010JsonHead\022\016\n\006Length\030\001 \001(\005\022\014\n\004"
      "Flag\030\002 \001(\005\022\022\n\nNameLength\030\003 \001(\005\022\020\n\010Typena"
      "me\030\004 \001(\t\022\027\n\017ProtocolbufData\030\005 \001(\t\022\020\n\010Che"
      "ckSum\030\006 \001(\005B6\n\017com.weilin.doorB\014DoorProt"
      "ocol\252\002\024Weilin.Protobuf.Doorb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 675);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "interact_door.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_interact_5fdoor_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenDoorReq::kPassWordFieldNumber;
const int OpenDoorReq::kDoorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenDoorReq::OpenDoorReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.OpenDoorReq)
}
OpenDoorReq::OpenDoorReq(const OpenDoorReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doorid().size() > 0) {
    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
  // @@protoc_insertion_point(copy_constructor:door.OpenDoorReq)
}

void OpenDoorReq::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OpenDoorReq::~OpenDoorReq() {
  // @@protoc_insertion_point(destructor:door.OpenDoorReq)
  SharedDtor();
}

void OpenDoorReq::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenDoorReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenDoorReq::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[0].descriptor;
}

const OpenDoorReq& OpenDoorReq::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenDoorReq* OpenDoorReq::New(::google::protobuf::Arena* arena) const {
  OpenDoorReq* n = new OpenDoorReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenDoorReq::Clear() {
// @@protoc_insertion_point(message_clear_start:door.OpenDoorReq)
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool OpenDoorReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.OpenDoorReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PassWord = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.OpenDoorReq.PassWord"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string DoorID = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doorid().data(), this->doorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.OpenDoorReq.DoorID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.OpenDoorReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.OpenDoorReq)
  return false;
#undef DO_
}

void OpenDoorReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.OpenDoorReq)
  // string PassWord = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorReq.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // string DoorID = 2;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorReq.DoorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->doorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.OpenDoorReq)
}

::google::protobuf::uint8* OpenDoorReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.OpenDoorReq)
  // string PassWord = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorReq.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // string DoorID = 2;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorReq.DoorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->doorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.OpenDoorReq)
  return target;
}

size_t OpenDoorReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.OpenDoorReq)
  size_t total_size = 0;

  // string PassWord = 1;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string DoorID = 2;
  if (this->doorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenDoorReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.OpenDoorReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenDoorReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenDoorReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.OpenDoorReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.OpenDoorReq)
    MergeFrom(*source);
  }
}

void OpenDoorReq::MergeFrom(const OpenDoorReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.OpenDoorReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.doorid().size() > 0) {

    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
}

void OpenDoorReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.OpenDoorReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenDoorReq::CopyFrom(const OpenDoorReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.OpenDoorReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenDoorReq::IsInitialized() const {
  return true;
}

void OpenDoorReq::Swap(OpenDoorReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenDoorReq::InternalSwap(OpenDoorReq* other) {
  password_.Swap(&other->password_);
  doorid_.Swap(&other->doorid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenDoorReq::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenDoorReq

// string PassWord = 1;
void OpenDoorReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpenDoorReq::password() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorReq.PassWord)
  return password_.GetNoArena();
}
void OpenDoorReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorReq.PassWord)
}
#if LANG_CXX11
void OpenDoorReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorReq.PassWord)
}
#endif
void OpenDoorReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorReq.PassWord)
}
void OpenDoorReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorReq.PassWord)
}
::std::string* OpenDoorReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenDoorReq::release_password() {
  // @@protoc_insertion_point(field_release:door.OpenDoorReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenDoorReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorReq.PassWord)
}

// string DoorID = 2;
void OpenDoorReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpenDoorReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorReq.DoorID)
  return doorid_.GetNoArena();
}
void OpenDoorReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorReq.DoorID)
}
#if LANG_CXX11
void OpenDoorReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorReq.DoorID)
}
#endif
void OpenDoorReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorReq.DoorID)
}
void OpenDoorReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorReq.DoorID)
}
::std::string* OpenDoorReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenDoorReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.OpenDoorReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenDoorReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorReq.DoorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenDoorResp::kResultFieldNumber;
const int OpenDoorResp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenDoorResp::OpenDoorResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.OpenDoorResp)
}
OpenDoorResp::OpenDoorResp(const OpenDoorResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:door.OpenDoorResp)
}

void OpenDoorResp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

OpenDoorResp::~OpenDoorResp() {
  // @@protoc_insertion_point(destructor:door.OpenDoorResp)
  SharedDtor();
}

void OpenDoorResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenDoorResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenDoorResp::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[1].descriptor;
}

const OpenDoorResp& OpenDoorResp::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenDoorResp* OpenDoorResp::New(::google::protobuf::Arena* arena) const {
  OpenDoorResp* n = new OpenDoorResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenDoorResp::Clear() {
// @@protoc_insertion_point(message_clear_start:door.OpenDoorResp)
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool OpenDoorResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.OpenDoorResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.OpenDoorResp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.OpenDoorResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.OpenDoorResp)
  return false;
#undef DO_
}

void OpenDoorResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.OpenDoorResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorResp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.OpenDoorResp)
}

::google::protobuf::uint8* OpenDoorResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.OpenDoorResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.OpenDoorResp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.OpenDoorResp)
  return target;
}

size_t OpenDoorResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.OpenDoorResp)
  size_t total_size = 0;

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenDoorResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.OpenDoorResp)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenDoorResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenDoorResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.OpenDoorResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.OpenDoorResp)
    MergeFrom(*source);
  }
}

void OpenDoorResp::MergeFrom(const OpenDoorResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.OpenDoorResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void OpenDoorResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.OpenDoorResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenDoorResp::CopyFrom(const OpenDoorResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.OpenDoorResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenDoorResp::IsInitialized() const {
  return true;
}

void OpenDoorResp::Swap(OpenDoorResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenDoorResp::InternalSwap(OpenDoorResp* other) {
  errmsg_.Swap(&other->errmsg_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenDoorResp::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenDoorResp

// int32 Result = 1;
void OpenDoorResp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 OpenDoorResp::result() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorResp.Result)
  return result_;
}
void OpenDoorResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.OpenDoorResp.Result)
}

// string ErrMsg = 2;
void OpenDoorResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OpenDoorResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorResp.ErrMsg)
  return errmsg_.GetNoArena();
}
void OpenDoorResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorResp.ErrMsg)
}
#if LANG_CXX11
void OpenDoorResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorResp.ErrMsg)
}
#endif
void OpenDoorResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorResp.ErrMsg)
}
void OpenDoorResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorResp.ErrMsg)
}
::std::string* OpenDoorResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenDoorResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.OpenDoorResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenDoorResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorResp.ErrMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpgradeReq::kAppNameFieldNumber;
const int UpgradeReq::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpgradeReq::UpgradeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.UpgradeReq)
}
UpgradeReq::UpgradeReq(const UpgradeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.appname().size() > 0) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:door.UpgradeReq)
}

void UpgradeReq::SharedCtor() {
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  _cached_size_ = 0;
}

UpgradeReq::~UpgradeReq() {
  // @@protoc_insertion_point(destructor:door.UpgradeReq)
  SharedDtor();
}

void UpgradeReq::SharedDtor() {
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpgradeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeReq::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[2].descriptor;
}

const UpgradeReq& UpgradeReq::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpgradeReq* UpgradeReq::New(::google::protobuf::Arena* arena) const {
  UpgradeReq* n = new UpgradeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpgradeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:door.UpgradeReq)
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
}

bool UpgradeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.UpgradeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string AppName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpgradeReq.AppName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Version = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.UpgradeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.UpgradeReq)
  return false;
#undef DO_
}

void UpgradeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.UpgradeReq)
  // string AppName = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeReq.AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appname(), output);
  }

  // int32 Version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.UpgradeReq)
}

::google::protobuf::uint8* UpgradeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.UpgradeReq)
  // string AppName = 1;
  if (this->appname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeReq.AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appname(), target);
  }

  // int32 Version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.UpgradeReq)
  return target;
}

size_t UpgradeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.UpgradeReq)
  size_t total_size = 0;

  // string AppName = 1;
  if (this->appname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appname());
  }

  // int32 Version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.UpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpgradeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.UpgradeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.UpgradeReq)
    MergeFrom(*source);
  }
}

void UpgradeReq::MergeFrom(const UpgradeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.UpgradeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.appname().size() > 0) {

    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void UpgradeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.UpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeReq::CopyFrom(const UpgradeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.UpgradeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeReq::IsInitialized() const {
  return true;
}

void UpgradeReq::Swap(UpgradeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpgradeReq::InternalSwap(UpgradeReq* other) {
  appname_.Swap(&other->appname_);
  std::swap(version_, other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpgradeReq::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpgradeReq

// string AppName = 1;
void UpgradeReq::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpgradeReq::appname() const {
  // @@protoc_insertion_point(field_get:door.UpgradeReq.AppName)
  return appname_.GetNoArena();
}
void UpgradeReq::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeReq.AppName)
}
#if LANG_CXX11
void UpgradeReq::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeReq.AppName)
}
#endif
void UpgradeReq::set_appname(const char* value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeReq.AppName)
}
void UpgradeReq::set_appname(const char* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeReq.AppName)
}
::std::string* UpgradeReq::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeReq.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpgradeReq::release_appname() {
  // @@protoc_insertion_point(field_release:door.UpgradeReq.AppName)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpgradeReq::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeReq.AppName)
}

// int32 Version = 2;
void UpgradeReq::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 UpgradeReq::version() const {
  // @@protoc_insertion_point(field_get:door.UpgradeReq.Version)
  return version_;
}
void UpgradeReq::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeReq.Version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpgradeResp::kResultFieldNumber;
const int UpgradeResp::kErrMsgFieldNumber;
const int UpgradeResp::kDescribeFieldNumber;
const int UpgradeResp::kUrlFieldNumber;
const int UpgradeResp::kTypeFieldNumber;
const int UpgradeResp::kChecksumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpgradeResp::UpgradeResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.UpgradeResp)
}
UpgradeResp::UpgradeResp(const UpgradeResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.describe().size() > 0) {
    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checksum().size() > 0) {
    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  ::memcpy(&result_, &from.result_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&result_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:door.UpgradeResp)
}

void UpgradeResp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&result_) + sizeof(type_));
  _cached_size_ = 0;
}

UpgradeResp::~UpgradeResp() {
  // @@protoc_insertion_point(destructor:door.UpgradeResp)
  SharedDtor();
}

void UpgradeResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpgradeResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeResp::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[3].descriptor;
}

const UpgradeResp& UpgradeResp::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpgradeResp* UpgradeResp::New(::google::protobuf::Arena* arena) const {
  UpgradeResp* n = new UpgradeResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpgradeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:door.UpgradeResp)
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&result_) + sizeof(type_));
}

bool UpgradeResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.UpgradeResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpgradeResp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Describe = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_describe()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->describe().data(), this->describe().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpgradeResp.Describe"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Url = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpgradeResp.Url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Type = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string checksum = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checksum()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checksum().data(), this->checksum().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpgradeResp.checksum"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.UpgradeResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.UpgradeResp)
  return false;
#undef DO_
}

void UpgradeResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.UpgradeResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // string Describe = 3;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.Describe");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->describe(), output);
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->url(), output);
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // string checksum = 6;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), this->checksum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.checksum");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->checksum(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.UpgradeResp)
}

::google::protobuf::uint8* UpgradeResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.UpgradeResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // string Describe = 3;
  if (this->describe().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->describe().data(), this->describe().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.Describe");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->describe(), target);
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->url(), target);
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // string checksum = 6;
  if (this->checksum().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checksum().data(), this->checksum().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpgradeResp.checksum");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->checksum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.UpgradeResp)
  return target;
}

size_t UpgradeResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.UpgradeResp)
  size_t total_size = 0;

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // string Describe = 3;
  if (this->describe().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->describe());
  }

  // string Url = 4;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string checksum = 6;
  if (this->checksum().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checksum());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.UpgradeResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpgradeResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpgradeResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.UpgradeResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.UpgradeResp)
    MergeFrom(*source);
  }
}

void UpgradeResp::MergeFrom(const UpgradeResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.UpgradeResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.describe().size() > 0) {

    describe_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.describe_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.checksum().size() > 0) {

    checksum_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checksum_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void UpgradeResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.UpgradeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeResp::CopyFrom(const UpgradeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.UpgradeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeResp::IsInitialized() const {
  return true;
}

void UpgradeResp::Swap(UpgradeResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpgradeResp::InternalSwap(UpgradeResp* other) {
  errmsg_.Swap(&other->errmsg_);
  describe_.Swap(&other->describe_);
  url_.Swap(&other->url_);
  checksum_.Swap(&other->checksum_);
  std::swap(result_, other->result_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpgradeResp::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpgradeResp

// int32 Result = 1;
void UpgradeResp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 UpgradeResp::result() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Result)
  return result_;
}
void UpgradeResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Result)
}

// string ErrMsg = 2;
void UpgradeResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpgradeResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.ErrMsg)
  return errmsg_.GetNoArena();
}
void UpgradeResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.ErrMsg)
}
#if LANG_CXX11
void UpgradeResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.ErrMsg)
}
#endif
void UpgradeResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.ErrMsg)
}
void UpgradeResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.ErrMsg)
}
::std::string* UpgradeResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpgradeResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpgradeResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.ErrMsg)
}

// string Describe = 3;
void UpgradeResp::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpgradeResp::describe() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Describe)
  return describe_.GetNoArena();
}
void UpgradeResp::set_describe(const ::std::string& value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Describe)
}
#if LANG_CXX11
void UpgradeResp::set_describe(::std::string&& value) {
  
  describe_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.Describe)
}
#endif
void UpgradeResp::set_describe(const char* value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.Describe)
}
void UpgradeResp::set_describe(const char* value, size_t size) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.Describe)
}
::std::string* UpgradeResp::mutable_describe() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.Describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpgradeResp::release_describe() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.Describe)
  
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpgradeResp::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    
  } else {
    
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.Describe)
}

// string Url = 4;
void UpgradeResp::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpgradeResp::url() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Url)
  return url_.GetNoArena();
}
void UpgradeResp::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Url)
}
#if LANG_CXX11
void UpgradeResp::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.Url)
}
#endif
void UpgradeResp::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.Url)
}
void UpgradeResp::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.Url)
}
::std::string* UpgradeResp::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpgradeResp::release_url() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.Url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpgradeResp::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.Url)
}

// int32 Type = 5;
void UpgradeResp::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 UpgradeResp::type() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Type)
  return type_;
}
void UpgradeResp::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Type)
}

// string checksum = 6;
void UpgradeResp::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpgradeResp::checksum() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.checksum)
  return checksum_.GetNoArena();
}
void UpgradeResp::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.checksum)
}
#if LANG_CXX11
void UpgradeResp::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.checksum)
}
#endif
void UpgradeResp::set_checksum(const char* value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.checksum)
}
void UpgradeResp::set_checksum(const char* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.checksum)
}
::std::string* UpgradeResp::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.checksum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpgradeResp::release_checksum() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.checksum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpgradeResp::set_allocated_checksum(::std::string* checksum) {
  if (checksum != NULL) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.checksum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDynamicPWReq::kDoorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDynamicPWReq::UpdateDynamicPWReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.UpdateDynamicPWReq)
}
UpdateDynamicPWReq::UpdateDynamicPWReq(const UpdateDynamicPWReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doorid().size() > 0) {
    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
  // @@protoc_insertion_point(copy_constructor:door.UpdateDynamicPWReq)
}

void UpdateDynamicPWReq::SharedCtor() {
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateDynamicPWReq::~UpdateDynamicPWReq() {
  // @@protoc_insertion_point(destructor:door.UpdateDynamicPWReq)
  SharedDtor();
}

void UpdateDynamicPWReq::SharedDtor() {
  doorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateDynamicPWReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDynamicPWReq::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[4].descriptor;
}

const UpdateDynamicPWReq& UpdateDynamicPWReq::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateDynamicPWReq* UpdateDynamicPWReq::New(::google::protobuf::Arena* arena) const {
  UpdateDynamicPWReq* n = new UpdateDynamicPWReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDynamicPWReq::Clear() {
// @@protoc_insertion_point(message_clear_start:door.UpdateDynamicPWReq)
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateDynamicPWReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.UpdateDynamicPWReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string DoorID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doorid().data(), this->doorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpdateDynamicPWReq.DoorID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.UpdateDynamicPWReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.UpdateDynamicPWReq)
  return false;
#undef DO_
}

void UpdateDynamicPWReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.UpdateDynamicPWReq)
  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWReq.DoorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->doorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.UpdateDynamicPWReq)
}

::google::protobuf::uint8* UpdateDynamicPWReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.UpdateDynamicPWReq)
  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWReq.DoorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->doorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.UpdateDynamicPWReq)
  return target;
}

size_t UpdateDynamicPWReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.UpdateDynamicPWReq)
  size_t total_size = 0;

  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDynamicPWReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.UpdateDynamicPWReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDynamicPWReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDynamicPWReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.UpdateDynamicPWReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.UpdateDynamicPWReq)
    MergeFrom(*source);
  }
}

void UpdateDynamicPWReq::MergeFrom(const UpdateDynamicPWReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.UpdateDynamicPWReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.doorid().size() > 0) {

    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
}

void UpdateDynamicPWReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.UpdateDynamicPWReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDynamicPWReq::CopyFrom(const UpdateDynamicPWReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.UpdateDynamicPWReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDynamicPWReq::IsInitialized() const {
  return true;
}

void UpdateDynamicPWReq::Swap(UpdateDynamicPWReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDynamicPWReq::InternalSwap(UpdateDynamicPWReq* other) {
  doorid_.Swap(&other->doorid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDynamicPWReq::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateDynamicPWReq

// string DoorID = 1;
void UpdateDynamicPWReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateDynamicPWReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWReq.DoorID)
  return doorid_.GetNoArena();
}
void UpdateDynamicPWReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWReq.DoorID)
}
#if LANG_CXX11
void UpdateDynamicPWReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpdateDynamicPWReq.DoorID)
}
#endif
void UpdateDynamicPWReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWReq.DoorID)
}
void UpdateDynamicPWReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWReq.DoorID)
}
::std::string* UpdateDynamicPWReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateDynamicPWReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.UpdateDynamicPWReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateDynamicPWReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.UpdateDynamicPWReq.DoorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDynamicPWResp::kResultFieldNumber;
const int UpdateDynamicPWResp::kErrMsgFieldNumber;
const int UpdateDynamicPWResp::kPassWordsFieldNumber;
const int UpdateDynamicPWResp::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDynamicPWResp::UpdateDynamicPWResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.UpdateDynamicPWResp)
}
UpdateDynamicPWResp::UpdateDynamicPWResp(const UpdateDynamicPWResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      passwords_(from.passwords_),
      time_(from.time_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:door.UpdateDynamicPWResp)
}

void UpdateDynamicPWResp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

UpdateDynamicPWResp::~UpdateDynamicPWResp() {
  // @@protoc_insertion_point(destructor:door.UpdateDynamicPWResp)
  SharedDtor();
}

void UpdateDynamicPWResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateDynamicPWResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDynamicPWResp::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[5].descriptor;
}

const UpdateDynamicPWResp& UpdateDynamicPWResp::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateDynamicPWResp* UpdateDynamicPWResp::New(::google::protobuf::Arena* arena) const {
  UpdateDynamicPWResp* n = new UpdateDynamicPWResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDynamicPWResp::Clear() {
// @@protoc_insertion_point(message_clear_start:door.UpdateDynamicPWResp)
  passwords_.Clear();
  time_.Clear();
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool UpdateDynamicPWResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.UpdateDynamicPWResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpdateDynamicPWResp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string PassWords = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_passwords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->passwords(this->passwords_size() - 1).data(),
            this->passwords(this->passwords_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.UpdateDynamicPWResp.PassWords"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Time = 4;
      case 4: {
        if (tag == 34u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_time())));
        } else if (tag == 32u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_time())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.UpdateDynamicPWResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.UpdateDynamicPWResp)
  return false;
#undef DO_
}

void UpdateDynamicPWResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.UpdateDynamicPWResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWResp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // repeated string PassWords = 3;
  for (int i = 0; i < this->passwords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwords(i).data(), this->passwords(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWResp.PassWords");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->passwords(i), output);
  }

  // repeated int32 Time = 4;
  if (this->time_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_time_cached_byte_size_);
  }
  for (int i = 0; i < this->time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->time(i), output);
  }

  // @@protoc_insertion_point(serialize_end:door.UpdateDynamicPWResp)
}

::google::protobuf::uint8* UpdateDynamicPWResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.UpdateDynamicPWResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWResp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // repeated string PassWords = 3;
  for (int i = 0; i < this->passwords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->passwords(i).data(), this->passwords(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.UpdateDynamicPWResp.PassWords");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->passwords(i), target);
  }

  // repeated int32 Time = 4;
  if (this->time_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _time_cached_byte_size_, target);
  }
  for (int i = 0; i < this->time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->time(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.UpdateDynamicPWResp)
  return target;
}

size_t UpdateDynamicPWResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.UpdateDynamicPWResp)
  size_t total_size = 0;

  // repeated string PassWords = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->passwords_size());
  for (int i = 0; i < this->passwords_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->passwords(i));
  }

  // repeated int32 Time = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->time_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _time_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDynamicPWResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.UpdateDynamicPWResp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDynamicPWResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDynamicPWResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.UpdateDynamicPWResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.UpdateDynamicPWResp)
    MergeFrom(*source);
  }
}

void UpdateDynamicPWResp::MergeFrom(const UpdateDynamicPWResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.UpdateDynamicPWResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passwords_.MergeFrom(from.passwords_);
  time_.MergeFrom(from.time_);
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void UpdateDynamicPWResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.UpdateDynamicPWResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDynamicPWResp::CopyFrom(const UpdateDynamicPWResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.UpdateDynamicPWResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDynamicPWResp::IsInitialized() const {
  return true;
}

void UpdateDynamicPWResp::Swap(UpdateDynamicPWResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDynamicPWResp::InternalSwap(UpdateDynamicPWResp* other) {
  passwords_.UnsafeArenaSwap(&other->passwords_);
  time_.UnsafeArenaSwap(&other->time_);
  errmsg_.Swap(&other->errmsg_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDynamicPWResp::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateDynamicPWResp

// int32 Result = 1;
void UpdateDynamicPWResp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 UpdateDynamicPWResp::result() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.Result)
  return result_;
}
void UpdateDynamicPWResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.Result)
}

// string ErrMsg = 2;
void UpdateDynamicPWResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateDynamicPWResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.ErrMsg)
  return errmsg_.GetNoArena();
}
void UpdateDynamicPWResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.ErrMsg)
}
#if LANG_CXX11
void UpdateDynamicPWResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpdateDynamicPWResp.ErrMsg)
}
#endif
void UpdateDynamicPWResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWResp.ErrMsg)
}
void UpdateDynamicPWResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWResp.ErrMsg)
}
::std::string* UpdateDynamicPWResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateDynamicPWResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.UpdateDynamicPWResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateDynamicPWResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.UpdateDynamicPWResp.ErrMsg)
}

// repeated string PassWords = 3;
int UpdateDynamicPWResp::passwords_size() const {
  return passwords_.size();
}
void UpdateDynamicPWResp::clear_passwords() {
  passwords_.Clear();
}
const ::std::string& UpdateDynamicPWResp::passwords(int index) const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Get(index);
}
::std::string* UpdateDynamicPWResp::mutable_passwords(int index) {
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Mutable(index);
}
void UpdateDynamicPWResp::set_passwords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.PassWords)
  passwords_.Mutable(index)->assign(value);
}
void UpdateDynamicPWResp::set_passwords(int index, const char* value) {
  passwords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWResp.PassWords)
}
void UpdateDynamicPWResp::set_passwords(int index, const char* value, size_t size) {
  passwords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWResp.PassWords)
}
::std::string* UpdateDynamicPWResp::add_passwords() {
  // @@protoc_insertion_point(field_add_mutable:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Add();
}
void UpdateDynamicPWResp::add_passwords(const ::std::string& value) {
  passwords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:door.UpdateDynamicPWResp.PassWords)
}
void UpdateDynamicPWResp::add_passwords(const char* value) {
  passwords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:door.UpdateDynamicPWResp.PassWords)
}
void UpdateDynamicPWResp::add_passwords(const char* value, size_t size) {
  passwords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:door.UpdateDynamicPWResp.PassWords)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateDynamicPWResp::passwords() const {
  // @@protoc_insertion_point(field_list:door.UpdateDynamicPWResp.PassWords)
  return passwords_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateDynamicPWResp::mutable_passwords() {
  // @@protoc_insertion_point(field_mutable_list:door.UpdateDynamicPWResp.PassWords)
  return &passwords_;
}

// repeated int32 Time = 4;
int UpdateDynamicPWResp::time_size() const {
  return time_.size();
}
void UpdateDynamicPWResp::clear_time() {
  time_.Clear();
}
::google::protobuf::int32 UpdateDynamicPWResp::time(int index) const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.Time)
  return time_.Get(index);
}
void UpdateDynamicPWResp::set_time(int index, ::google::protobuf::int32 value) {
  time_.Set(index, value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.Time)
}
void UpdateDynamicPWResp::add_time(::google::protobuf::int32 value) {
  time_.Add(value);
  // @@protoc_insertion_point(field_add:door.UpdateDynamicPWResp.Time)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UpdateDynamicPWResp::time() const {
  // @@protoc_insertion_point(field_list:door.UpdateDynamicPWResp.Time)
  return time_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UpdateDynamicPWResp::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:door.UpdateDynamicPWResp.Time)
  return &time_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectReq::kDoorIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectReq::ConnectReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.ConnectReq)
}
ConnectReq::ConnectReq(const ConnectReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doorid().size() > 0) {
    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
  // @@protoc_insertion_point(copy_constructor:door.ConnectReq)
}

void ConnectReq::SharedCtor() {
  doorid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConnectReq::~ConnectReq() {
  // @@protoc_insertion_point(destructor:door.ConnectReq)
  SharedDtor();
}

void ConnectReq::SharedDtor() {
  doorid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectReq::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[6].descriptor;
}

const ConnectReq& ConnectReq::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectReq* ConnectReq::New(::google::protobuf::Arena* arena) const {
  ConnectReq* n = new ConnectReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectReq::Clear() {
// @@protoc_insertion_point(message_clear_start:door.ConnectReq)
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ConnectReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.ConnectReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string DoorID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doorid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doorid().data(), this->doorid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.ConnectReq.DoorID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.ConnectReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.ConnectReq)
  return false;
#undef DO_
}

void ConnectReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.ConnectReq)
  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.ConnectReq.DoorID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->doorid(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.ConnectReq)
}

::google::protobuf::uint8* ConnectReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.ConnectReq)
  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doorid().data(), this->doorid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.ConnectReq.DoorID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->doorid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.ConnectReq)
  return target;
}

size_t ConnectReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.ConnectReq)
  size_t total_size = 0;

  // string DoorID = 1;
  if (this->doorid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doorid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.ConnectReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.ConnectReq)
    MergeFrom(*source);
  }
}

void ConnectReq::MergeFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.ConnectReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.doorid().size() > 0) {

    doorid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doorid_);
  }
}

void ConnectReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectReq::CopyFrom(const ConnectReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.ConnectReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectReq::IsInitialized() const {
  return true;
}

void ConnectReq::Swap(ConnectReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectReq::InternalSwap(ConnectReq* other) {
  doorid_.Swap(&other->doorid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectReq::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectReq

// string DoorID = 1;
void ConnectReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.ConnectReq.DoorID)
  return doorid_.GetNoArena();
}
void ConnectReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.ConnectReq.DoorID)
}
#if LANG_CXX11
void ConnectReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.ConnectReq.DoorID)
}
#endif
void ConnectReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.ConnectReq.DoorID)
}
void ConnectReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.ConnectReq.DoorID)
}
::std::string* ConnectReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.ConnectReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.ConnectReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.ConnectReq.DoorID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectReqResp::kResultFieldNumber;
const int ConnectReqResp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectReqResp::ConnectReqResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.ConnectReqResp)
}
ConnectReqResp::ConnectReqResp(const ConnectReqResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.errmsg().size() > 0) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:door.ConnectReqResp)
}

void ConnectReqResp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _cached_size_ = 0;
}

ConnectReqResp::~ConnectReqResp() {
  // @@protoc_insertion_point(destructor:door.ConnectReqResp)
  SharedDtor();
}

void ConnectReqResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConnectReqResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectReqResp::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[7].descriptor;
}

const ConnectReqResp& ConnectReqResp::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectReqResp* ConnectReqResp::New(::google::protobuf::Arena* arena) const {
  ConnectReqResp* n = new ConnectReqResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectReqResp::Clear() {
// @@protoc_insertion_point(message_clear_start:door.ConnectReqResp)
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

bool ConnectReqResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.ConnectReqResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ErrMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.ConnectReqResp.ErrMsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.ConnectReqResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.ConnectReqResp)
  return false;
#undef DO_
}

void ConnectReqResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.ConnectReqResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.ConnectReqResp.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.ConnectReqResp)
}

::google::protobuf::uint8* ConnectReqResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.ConnectReqResp)
  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.ConnectReqResp.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.ConnectReqResp)
  return target;
}

size_t ConnectReqResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.ConnectReqResp)
  size_t total_size = 0;

  // string ErrMsg = 2;
  if (this->errmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnectReqResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.ConnectReqResp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectReqResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnectReqResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.ConnectReqResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.ConnectReqResp)
    MergeFrom(*source);
  }
}

void ConnectReqResp::MergeFrom(const ConnectReqResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.ConnectReqResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.errmsg().size() > 0) {

    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ConnectReqResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.ConnectReqResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectReqResp::CopyFrom(const ConnectReqResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.ConnectReqResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectReqResp::IsInitialized() const {
  return true;
}

void ConnectReqResp::Swap(ConnectReqResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectReqResp::InternalSwap(ConnectReqResp* other) {
  errmsg_.Swap(&other->errmsg_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnectReqResp::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectReqResp

// int32 Result = 1;
void ConnectReqResp::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 ConnectReqResp::result() const {
  // @@protoc_insertion_point(field_get:door.ConnectReqResp.Result)
  return result_;
}
void ConnectReqResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.ConnectReqResp.Result)
}

// string ErrMsg = 2;
void ConnectReqResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConnectReqResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.ConnectReqResp.ErrMsg)
  return errmsg_.GetNoArena();
}
void ConnectReqResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.ConnectReqResp.ErrMsg)
}
#if LANG_CXX11
void ConnectReqResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.ConnectReqResp.ErrMsg)
}
#endif
void ConnectReqResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.ConnectReqResp.ErrMsg)
}
void ConnectReqResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.ConnectReqResp.ErrMsg)
}
::std::string* ConnectReqResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.ConnectReqResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConnectReqResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.ConnectReqResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConnectReqResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.ConnectReqResp.ErrMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JsonHead::kLengthFieldNumber;
const int JsonHead::kFlagFieldNumber;
const int JsonHead::kNameLengthFieldNumber;
const int JsonHead::kTypenameFieldNumber;
const int JsonHead::kProtocolbufDataFieldNumber;
const int JsonHead::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JsonHead::JsonHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_interact_5fdoor_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:door.JsonHead)
}
JsonHead::JsonHead(const JsonHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  typename__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.typename_().size() > 0) {
    typename__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typename__);
  }
  protocolbufdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocolbufdata().size() > 0) {
    protocolbufdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolbufdata_);
  }
  ::memcpy(&length_, &from.length_,
    reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:door.JsonHead)
}

void JsonHead::SharedCtor() {
  typename__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
  _cached_size_ = 0;
}

JsonHead::~JsonHead() {
  // @@protoc_insertion_point(destructor:door.JsonHead)
  SharedDtor();
}

void JsonHead::SharedDtor() {
  typename__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JsonHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonHead::descriptor() {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[8].descriptor;
}

const JsonHead& JsonHead::default_instance() {
  protobuf_interact_5fdoor_2eproto::InitDefaults();
  return *internal_default_instance();
}

JsonHead* JsonHead::New(::google::protobuf::Arena* arena) const {
  JsonHead* n = new JsonHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonHead::Clear() {
// @@protoc_insertion_point(message_clear_start:door.JsonHead)
  typename__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
}

bool JsonHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:door.JsonHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Length = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Flag = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NameLength = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &namelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Typename = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typename_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->typename_().data(), this->typename_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.JsonHead.Typename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProtocolbufData = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocolbufdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocolbufdata().data(), this->protocolbufdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "door.JsonHead.ProtocolbufData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CheckSum = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:door.JsonHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:door.JsonHead)
  return false;
#undef DO_
}

void JsonHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:door.JsonHead)
  // int32 Length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->namelength(), output);
  }

  // string Typename = 4;
  if (this->typename_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typename_().data(), this->typename_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.JsonHead.Typename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->typename_(), output);
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolbufdata().data(), this->protocolbufdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.JsonHead.ProtocolbufData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->protocolbufdata(), output);
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->checksum(), output);
  }

  // @@protoc_insertion_point(serialize_end:door.JsonHead)
}

::google::protobuf::uint8* JsonHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:door.JsonHead)
  // int32 Length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->namelength(), target);
  }

  // string Typename = 4;
  if (this->typename_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typename_().data(), this->typename_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.JsonHead.Typename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->typename_(), target);
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolbufdata().data(), this->protocolbufdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "door.JsonHead.ProtocolbufData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->protocolbufdata(), target);
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->checksum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:door.JsonHead)
  return target;
}

size_t JsonHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:door.JsonHead)
  size_t total_size = 0;

  // string Typename = 4;
  if (this->typename_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->typename_());
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolbufdata());
  }

  // int32 Length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->namelength());
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:door.JsonHead)
  GOOGLE_DCHECK_NE(&from, this);
  const JsonHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JsonHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:door.JsonHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:door.JsonHead)
    MergeFrom(*source);
  }
}

void JsonHead::MergeFrom(const JsonHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:door.JsonHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.typename_().size() > 0) {

    typename__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typename__);
  }
  if (from.protocolbufdata().size() > 0) {

    protocolbufdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolbufdata_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.namelength() != 0) {
    set_namelength(from.namelength());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
}

void JsonHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:door.JsonHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonHead::CopyFrom(const JsonHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:door.JsonHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonHead::IsInitialized() const {
  return true;
}

void JsonHead::Swap(JsonHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonHead::InternalSwap(JsonHead* other) {
  typename__.Swap(&other->typename__);
  protocolbufdata_.Swap(&other->protocolbufdata_);
  std::swap(length_, other->length_);
  std::swap(flag_, other->flag_);
  std::swap(namelength_, other->namelength_);
  std::swap(checksum_, other->checksum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonHead::GetMetadata() const {
  protobuf_interact_5fdoor_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_interact_5fdoor_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JsonHead

// int32 Length = 1;
void JsonHead::clear_length() {
  length_ = 0;
}
::google::protobuf::int32 JsonHead::length() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Length)
  return length_;
}
void JsonHead::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.Length)
}

// int32 Flag = 2;
void JsonHead::clear_flag() {
  flag_ = 0;
}
::google::protobuf::int32 JsonHead::flag() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Flag)
  return flag_;
}
void JsonHead::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.Flag)
}

// int32 NameLength = 3;
void JsonHead::clear_namelength() {
  namelength_ = 0;
}
::google::protobuf::int32 JsonHead::namelength() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.NameLength)
  return namelength_;
}
void JsonHead::set_namelength(::google::protobuf::int32 value) {
  
  namelength_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.NameLength)
}

// string Typename = 4;
void JsonHead::clear_typename_() {
  typename__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JsonHead::typename_() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Typename)
  return typename__.GetNoArena();
}
void JsonHead::set_typename_(const ::std::string& value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.JsonHead.Typename)
}
#if LANG_CXX11
void JsonHead::set_typename_(::std::string&& value) {
  
  typename__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.JsonHead.Typename)
}
#endif
void JsonHead::set_typename_(const char* value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.JsonHead.Typename)
}
void JsonHead::set_typename_(const char* value, size_t size) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.JsonHead.Typename)
}
::std::string* JsonHead::mutable_typename_() {
  
  // @@protoc_insertion_point(field_mutable:door.JsonHead.Typename)
  return typename__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JsonHead::release_typename_() {
  // @@protoc_insertion_point(field_release:door.JsonHead.Typename)
  
  return typename__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JsonHead::set_allocated_typename_(::std::string* typename_) {
  if (typename_ != NULL) {
    
  } else {
    
  }
  typename__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typename_);
  // @@protoc_insertion_point(field_set_allocated:door.JsonHead.Typename)
}

// string ProtocolbufData = 5;
void JsonHead::clear_protocolbufdata() {
  protocolbufdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JsonHead::protocolbufdata() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.ProtocolbufData)
  return protocolbufdata_.GetNoArena();
}
void JsonHead::set_protocolbufdata(const ::std::string& value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.JsonHead.ProtocolbufData)
}
#if LANG_CXX11
void JsonHead::set_protocolbufdata(::std::string&& value) {
  
  protocolbufdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.JsonHead.ProtocolbufData)
}
#endif
void JsonHead::set_protocolbufdata(const char* value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.JsonHead.ProtocolbufData)
}
void JsonHead::set_protocolbufdata(const char* value, size_t size) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.JsonHead.ProtocolbufData)
}
::std::string* JsonHead::mutable_protocolbufdata() {
  
  // @@protoc_insertion_point(field_mutable:door.JsonHead.ProtocolbufData)
  return protocolbufdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JsonHead::release_protocolbufdata() {
  // @@protoc_insertion_point(field_release:door.JsonHead.ProtocolbufData)
  
  return protocolbufdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JsonHead::set_allocated_protocolbufdata(::std::string* protocolbufdata) {
  if (protocolbufdata != NULL) {
    
  } else {
    
  }
  protocolbufdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolbufdata);
  // @@protoc_insertion_point(field_set_allocated:door.JsonHead.ProtocolbufData)
}

// int32 CheckSum = 6;
void JsonHead::clear_checksum() {
  checksum_ = 0;
}
::google::protobuf::int32 JsonHead::checksum() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.CheckSum)
  return checksum_;
}
void JsonHead::set_checksum(::google::protobuf::int32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.CheckSum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace door

// @@protoc_insertion_point(global_scope)
