// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: interact_door.proto

#ifndef PROTOBUF_interact_5fdoor_2eproto__INCLUDED
#define PROTOBUF_interact_5fdoor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace door {
class ConnectReq;
class ConnectReqDefaultTypeInternal;
extern ConnectReqDefaultTypeInternal _ConnectReq_default_instance_;
class ConnectReqResp;
class ConnectReqRespDefaultTypeInternal;
extern ConnectReqRespDefaultTypeInternal _ConnectReqResp_default_instance_;
class JsonHead;
class JsonHeadDefaultTypeInternal;
extern JsonHeadDefaultTypeInternal _JsonHead_default_instance_;
class OpenDoorReq;
class OpenDoorReqDefaultTypeInternal;
extern OpenDoorReqDefaultTypeInternal _OpenDoorReq_default_instance_;
class OpenDoorResp;
class OpenDoorRespDefaultTypeInternal;
extern OpenDoorRespDefaultTypeInternal _OpenDoorResp_default_instance_;
class UpdateDynamicPWReq;
class UpdateDynamicPWReqDefaultTypeInternal;
extern UpdateDynamicPWReqDefaultTypeInternal _UpdateDynamicPWReq_default_instance_;
class UpdateDynamicPWResp;
class UpdateDynamicPWRespDefaultTypeInternal;
extern UpdateDynamicPWRespDefaultTypeInternal _UpdateDynamicPWResp_default_instance_;
class UpgradeReq;
class UpgradeReqDefaultTypeInternal;
extern UpgradeReqDefaultTypeInternal _UpgradeReq_default_instance_;
class UpgradeResp;
class UpgradeRespDefaultTypeInternal;
extern UpgradeRespDefaultTypeInternal _UpgradeResp_default_instance_;
}  // namespace door

namespace door {

namespace protobuf_interact_5fdoor_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_interact_5fdoor_2eproto

// ===================================================================

class OpenDoorReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.OpenDoorReq) */ {
 public:
  OpenDoorReq();
  virtual ~OpenDoorReq();

  OpenDoorReq(const OpenDoorReq& from);

  inline OpenDoorReq& operator=(const OpenDoorReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenDoorReq& default_instance();

  static inline const OpenDoorReq* internal_default_instance() {
    return reinterpret_cast<const OpenDoorReq*>(
               &_OpenDoorReq_default_instance_);
  }

  void Swap(OpenDoorReq* other);

  // implements Message ----------------------------------------------

  inline OpenDoorReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenDoorReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenDoorReq& from);
  void MergeFrom(const OpenDoorReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenDoorReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string PassWord = 1;
  void clear_password();
  static const int kPassWordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string DoorID = 2;
  void clear_doorid();
  static const int kDoorIDFieldNumber = 2;
  const ::std::string& doorid() const;
  void set_doorid(const ::std::string& value);
  #if LANG_CXX11
  void set_doorid(::std::string&& value);
  #endif
  void set_doorid(const char* value);
  void set_doorid(const char* value, size_t size);
  ::std::string* mutable_doorid();
  ::std::string* release_doorid();
  void set_allocated_doorid(::std::string* doorid);

  // @@protoc_insertion_point(class_scope:door.OpenDoorReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr doorid_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpenDoorResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.OpenDoorResp) */ {
 public:
  OpenDoorResp();
  virtual ~OpenDoorResp();

  OpenDoorResp(const OpenDoorResp& from);

  inline OpenDoorResp& operator=(const OpenDoorResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenDoorResp& default_instance();

  static inline const OpenDoorResp* internal_default_instance() {
    return reinterpret_cast<const OpenDoorResp*>(
               &_OpenDoorResp_default_instance_);
  }

  void Swap(OpenDoorResp* other);

  // implements Message ----------------------------------------------

  inline OpenDoorResp* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenDoorResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenDoorResp& from);
  void MergeFrom(const OpenDoorResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenDoorResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ErrMsg = 2;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.OpenDoorResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpgradeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.UpgradeReq) */ {
 public:
  UpgradeReq();
  virtual ~UpgradeReq();

  UpgradeReq(const UpgradeReq& from);

  inline UpgradeReq& operator=(const UpgradeReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeReq& default_instance();

  static inline const UpgradeReq* internal_default_instance() {
    return reinterpret_cast<const UpgradeReq*>(
               &_UpgradeReq_default_instance_);
  }

  void Swap(UpgradeReq* other);

  // implements Message ----------------------------------------------

  inline UpgradeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpgradeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpgradeReq& from);
  void MergeFrom(const UpgradeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpgradeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string AppName = 1;
  void clear_appname();
  static const int kAppNameFieldNumber = 1;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // int32 Version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.UpgradeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpgradeResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.UpgradeResp) */ {
 public:
  UpgradeResp();
  virtual ~UpgradeResp();

  UpgradeResp(const UpgradeResp& from);

  inline UpgradeResp& operator=(const UpgradeResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeResp& default_instance();

  static inline const UpgradeResp* internal_default_instance() {
    return reinterpret_cast<const UpgradeResp*>(
               &_UpgradeResp_default_instance_);
  }

  void Swap(UpgradeResp* other);

  // implements Message ----------------------------------------------

  inline UpgradeResp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpgradeResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpgradeResp& from);
  void MergeFrom(const UpgradeResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpgradeResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ErrMsg = 2;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // string Describe = 3;
  void clear_describe();
  static const int kDescribeFieldNumber = 3;
  const ::std::string& describe() const;
  void set_describe(const ::std::string& value);
  #if LANG_CXX11
  void set_describe(::std::string&& value);
  #endif
  void set_describe(const char* value);
  void set_describe(const char* value, size_t size);
  ::std::string* mutable_describe();
  ::std::string* release_describe();
  void set_allocated_describe(::std::string* describe);

  // string Url = 4;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string checksum = 6;
  void clear_checksum();
  static const int kChecksumFieldNumber = 6;
  const ::std::string& checksum() const;
  void set_checksum(const ::std::string& value);
  #if LANG_CXX11
  void set_checksum(::std::string&& value);
  #endif
  void set_checksum(const char* value);
  void set_checksum(const char* value, size_t size);
  ::std::string* mutable_checksum();
  ::std::string* release_checksum();
  void set_allocated_checksum(::std::string* checksum);

  // int32 Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 Type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.UpgradeResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::internal::ArenaStringPtr describe_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr checksum_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateDynamicPWReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.UpdateDynamicPWReq) */ {
 public:
  UpdateDynamicPWReq();
  virtual ~UpdateDynamicPWReq();

  UpdateDynamicPWReq(const UpdateDynamicPWReq& from);

  inline UpdateDynamicPWReq& operator=(const UpdateDynamicPWReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDynamicPWReq& default_instance();

  static inline const UpdateDynamicPWReq* internal_default_instance() {
    return reinterpret_cast<const UpdateDynamicPWReq*>(
               &_UpdateDynamicPWReq_default_instance_);
  }

  void Swap(UpdateDynamicPWReq* other);

  // implements Message ----------------------------------------------

  inline UpdateDynamicPWReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateDynamicPWReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateDynamicPWReq& from);
  void MergeFrom(const UpdateDynamicPWReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateDynamicPWReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DoorID = 1;
  void clear_doorid();
  static const int kDoorIDFieldNumber = 1;
  const ::std::string& doorid() const;
  void set_doorid(const ::std::string& value);
  #if LANG_CXX11
  void set_doorid(::std::string&& value);
  #endif
  void set_doorid(const char* value);
  void set_doorid(const char* value, size_t size);
  ::std::string* mutable_doorid();
  ::std::string* release_doorid();
  void set_allocated_doorid(::std::string* doorid);

  // @@protoc_insertion_point(class_scope:door.UpdateDynamicPWReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr doorid_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateDynamicPWResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.UpdateDynamicPWResp) */ {
 public:
  UpdateDynamicPWResp();
  virtual ~UpdateDynamicPWResp();

  UpdateDynamicPWResp(const UpdateDynamicPWResp& from);

  inline UpdateDynamicPWResp& operator=(const UpdateDynamicPWResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateDynamicPWResp& default_instance();

  static inline const UpdateDynamicPWResp* internal_default_instance() {
    return reinterpret_cast<const UpdateDynamicPWResp*>(
               &_UpdateDynamicPWResp_default_instance_);
  }

  void Swap(UpdateDynamicPWResp* other);

  // implements Message ----------------------------------------------

  inline UpdateDynamicPWResp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateDynamicPWResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateDynamicPWResp& from);
  void MergeFrom(const UpdateDynamicPWResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateDynamicPWResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string PassWords = 3;
  int passwords_size() const;
  void clear_passwords();
  static const int kPassWordsFieldNumber = 3;
  const ::std::string& passwords(int index) const;
  ::std::string* mutable_passwords(int index);
  void set_passwords(int index, const ::std::string& value);
  void set_passwords(int index, const char* value);
  void set_passwords(int index, const char* value, size_t size);
  ::std::string* add_passwords();
  void add_passwords(const ::std::string& value);
  void add_passwords(const char* value);
  void add_passwords(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& passwords() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_passwords();

  // repeated int32 Time = 4;
  int time_size() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  ::google::protobuf::int32 time(int index) const;
  void set_time(int index, ::google::protobuf::int32 value);
  void add_time(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      time() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_time();

  // string ErrMsg = 2;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.UpdateDynamicPWResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> passwords_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > time_;
  mutable int _time_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.ConnectReq) */ {
 public:
  ConnectReq();
  virtual ~ConnectReq();

  ConnectReq(const ConnectReq& from);

  inline ConnectReq& operator=(const ConnectReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectReq& default_instance();

  static inline const ConnectReq* internal_default_instance() {
    return reinterpret_cast<const ConnectReq*>(
               &_ConnectReq_default_instance_);
  }

  void Swap(ConnectReq* other);

  // implements Message ----------------------------------------------

  inline ConnectReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectReq& from);
  void MergeFrom(const ConnectReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string DoorID = 1;
  void clear_doorid();
  static const int kDoorIDFieldNumber = 1;
  const ::std::string& doorid() const;
  void set_doorid(const ::std::string& value);
  #if LANG_CXX11
  void set_doorid(::std::string&& value);
  #endif
  void set_doorid(const char* value);
  void set_doorid(const char* value, size_t size);
  ::std::string* mutable_doorid();
  ::std::string* release_doorid();
  void set_allocated_doorid(::std::string* doorid);

  // @@protoc_insertion_point(class_scope:door.ConnectReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr doorid_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConnectReqResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.ConnectReqResp) */ {
 public:
  ConnectReqResp();
  virtual ~ConnectReqResp();

  ConnectReqResp(const ConnectReqResp& from);

  inline ConnectReqResp& operator=(const ConnectReqResp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConnectReqResp& default_instance();

  static inline const ConnectReqResp* internal_default_instance() {
    return reinterpret_cast<const ConnectReqResp*>(
               &_ConnectReqResp_default_instance_);
  }

  void Swap(ConnectReqResp* other);

  // implements Message ----------------------------------------------

  inline ConnectReqResp* New() const PROTOBUF_FINAL { return New(NULL); }

  ConnectReqResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConnectReqResp& from);
  void MergeFrom(const ConnectReqResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConnectReqResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ErrMsg = 2;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // int32 Result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.ConnectReqResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JsonHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:door.JsonHead) */ {
 public:
  JsonHead();
  virtual ~JsonHead();

  JsonHead(const JsonHead& from);

  inline JsonHead& operator=(const JsonHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JsonHead& default_instance();

  static inline const JsonHead* internal_default_instance() {
    return reinterpret_cast<const JsonHead*>(
               &_JsonHead_default_instance_);
  }

  void Swap(JsonHead* other);

  // implements Message ----------------------------------------------

  inline JsonHead* New() const PROTOBUF_FINAL { return New(NULL); }

  JsonHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JsonHead& from);
  void MergeFrom(const JsonHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JsonHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Typename = 4;
  void clear_typename_();
  static const int kTypenameFieldNumber = 4;
  const ::std::string& typename_() const;
  void set_typename_(const ::std::string& value);
  #if LANG_CXX11
  void set_typename_(::std::string&& value);
  #endif
  void set_typename_(const char* value);
  void set_typename_(const char* value, size_t size);
  ::std::string* mutable_typename_();
  ::std::string* release_typename_();
  void set_allocated_typename_(::std::string* typename_);

  // string ProtocolbufData = 5;
  void clear_protocolbufdata();
  static const int kProtocolbufDataFieldNumber = 5;
  const ::std::string& protocolbufdata() const;
  void set_protocolbufdata(const ::std::string& value);
  #if LANG_CXX11
  void set_protocolbufdata(::std::string&& value);
  #endif
  void set_protocolbufdata(const char* value);
  void set_protocolbufdata(const char* value, size_t size);
  ::std::string* mutable_protocolbufdata();
  ::std::string* release_protocolbufdata();
  void set_allocated_protocolbufdata(::std::string* protocolbufdata);

  // int32 Length = 1;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  ::google::protobuf::int32 length() const;
  void set_length(::google::protobuf::int32 value);

  // int32 Flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // int32 NameLength = 3;
  void clear_namelength();
  static const int kNameLengthFieldNumber = 3;
  ::google::protobuf::int32 namelength() const;
  void set_namelength(::google::protobuf::int32 value);

  // int32 CheckSum = 6;
  void clear_checksum();
  static const int kCheckSumFieldNumber = 6;
  ::google::protobuf::int32 checksum() const;
  void set_checksum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:door.JsonHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr typename__;
  ::google::protobuf::internal::ArenaStringPtr protocolbufdata_;
  ::google::protobuf::int32 length_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 namelength_;
  ::google::protobuf::int32 checksum_;
  mutable int _cached_size_;
  friend struct  protobuf_interact_5fdoor_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenDoorReq

// string PassWord = 1;
inline void OpenDoorReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenDoorReq::password() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorReq.PassWord)
  return password_.GetNoArena();
}
inline void OpenDoorReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorReq.PassWord)
}
#if LANG_CXX11
inline void OpenDoorReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorReq.PassWord)
}
#endif
inline void OpenDoorReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorReq.PassWord)
}
inline void OpenDoorReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorReq.PassWord)
}
inline ::std::string* OpenDoorReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorReq.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenDoorReq::release_password() {
  // @@protoc_insertion_point(field_release:door.OpenDoorReq.PassWord)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenDoorReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorReq.PassWord)
}

// string DoorID = 2;
inline void OpenDoorReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenDoorReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorReq.DoorID)
  return doorid_.GetNoArena();
}
inline void OpenDoorReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorReq.DoorID)
}
#if LANG_CXX11
inline void OpenDoorReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorReq.DoorID)
}
#endif
inline void OpenDoorReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorReq.DoorID)
}
inline void OpenDoorReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorReq.DoorID)
}
inline ::std::string* OpenDoorReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenDoorReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.OpenDoorReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenDoorReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorReq.DoorID)
}

// -------------------------------------------------------------------

// OpenDoorResp

// int32 Result = 1;
inline void OpenDoorResp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 OpenDoorResp::result() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorResp.Result)
  return result_;
}
inline void OpenDoorResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.OpenDoorResp.Result)
}

// string ErrMsg = 2;
inline void OpenDoorResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenDoorResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.OpenDoorResp.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void OpenDoorResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.OpenDoorResp.ErrMsg)
}
#if LANG_CXX11
inline void OpenDoorResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.OpenDoorResp.ErrMsg)
}
#endif
inline void OpenDoorResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.OpenDoorResp.ErrMsg)
}
inline void OpenDoorResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.OpenDoorResp.ErrMsg)
}
inline ::std::string* OpenDoorResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.OpenDoorResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenDoorResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.OpenDoorResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenDoorResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.OpenDoorResp.ErrMsg)
}

// -------------------------------------------------------------------

// UpgradeReq

// string AppName = 1;
inline void UpgradeReq::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeReq::appname() const {
  // @@protoc_insertion_point(field_get:door.UpgradeReq.AppName)
  return appname_.GetNoArena();
}
inline void UpgradeReq::set_appname(const ::std::string& value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeReq.AppName)
}
#if LANG_CXX11
inline void UpgradeReq::set_appname(::std::string&& value) {
  
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeReq.AppName)
}
#endif
inline void UpgradeReq::set_appname(const char* value) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeReq.AppName)
}
inline void UpgradeReq::set_appname(const char* value, size_t size) {
  
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeReq.AppName)
}
inline ::std::string* UpgradeReq::mutable_appname() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeReq.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeReq::release_appname() {
  // @@protoc_insertion_point(field_release:door.UpgradeReq.AppName)
  
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeReq::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    
  } else {
    
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeReq.AppName)
}

// int32 Version = 2;
inline void UpgradeReq::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 UpgradeReq::version() const {
  // @@protoc_insertion_point(field_get:door.UpgradeReq.Version)
  return version_;
}
inline void UpgradeReq::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeReq.Version)
}

// -------------------------------------------------------------------

// UpgradeResp

// int32 Result = 1;
inline void UpgradeResp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UpgradeResp::result() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Result)
  return result_;
}
inline void UpgradeResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Result)
}

// string ErrMsg = 2;
inline void UpgradeResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void UpgradeResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.ErrMsg)
}
#if LANG_CXX11
inline void UpgradeResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.ErrMsg)
}
#endif
inline void UpgradeResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.ErrMsg)
}
inline void UpgradeResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.ErrMsg)
}
inline ::std::string* UpgradeResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.ErrMsg)
}

// string Describe = 3;
inline void UpgradeResp::clear_describe() {
  describe_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeResp::describe() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Describe)
  return describe_.GetNoArena();
}
inline void UpgradeResp::set_describe(const ::std::string& value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Describe)
}
#if LANG_CXX11
inline void UpgradeResp::set_describe(::std::string&& value) {
  
  describe_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.Describe)
}
#endif
inline void UpgradeResp::set_describe(const char* value) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.Describe)
}
inline void UpgradeResp::set_describe(const char* value, size_t size) {
  
  describe_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.Describe)
}
inline ::std::string* UpgradeResp::mutable_describe() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.Describe)
  return describe_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeResp::release_describe() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.Describe)
  
  return describe_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeResp::set_allocated_describe(::std::string* describe) {
  if (describe != NULL) {
    
  } else {
    
  }
  describe_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), describe);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.Describe)
}

// string Url = 4;
inline void UpgradeResp::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeResp::url() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Url)
  return url_.GetNoArena();
}
inline void UpgradeResp::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Url)
}
#if LANG_CXX11
inline void UpgradeResp::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.Url)
}
#endif
inline void UpgradeResp::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.Url)
}
inline void UpgradeResp::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.Url)
}
inline ::std::string* UpgradeResp::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeResp::release_url() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.Url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeResp::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.Url)
}

// int32 Type = 5;
inline void UpgradeResp::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 UpgradeResp::type() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.Type)
  return type_;
}
inline void UpgradeResp::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:door.UpgradeResp.Type)
}

// string checksum = 6;
inline void UpgradeResp::clear_checksum() {
  checksum_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeResp::checksum() const {
  // @@protoc_insertion_point(field_get:door.UpgradeResp.checksum)
  return checksum_.GetNoArena();
}
inline void UpgradeResp::set_checksum(const ::std::string& value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpgradeResp.checksum)
}
#if LANG_CXX11
inline void UpgradeResp::set_checksum(::std::string&& value) {
  
  checksum_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpgradeResp.checksum)
}
#endif
inline void UpgradeResp::set_checksum(const char* value) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpgradeResp.checksum)
}
inline void UpgradeResp::set_checksum(const char* value, size_t size) {
  
  checksum_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpgradeResp.checksum)
}
inline ::std::string* UpgradeResp::mutable_checksum() {
  
  // @@protoc_insertion_point(field_mutable:door.UpgradeResp.checksum)
  return checksum_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeResp::release_checksum() {
  // @@protoc_insertion_point(field_release:door.UpgradeResp.checksum)
  
  return checksum_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeResp::set_allocated_checksum(::std::string* checksum) {
  if (checksum != NULL) {
    
  } else {
    
  }
  checksum_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checksum);
  // @@protoc_insertion_point(field_set_allocated:door.UpgradeResp.checksum)
}

// -------------------------------------------------------------------

// UpdateDynamicPWReq

// string DoorID = 1;
inline void UpdateDynamicPWReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateDynamicPWReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWReq.DoorID)
  return doorid_.GetNoArena();
}
inline void UpdateDynamicPWReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWReq.DoorID)
}
#if LANG_CXX11
inline void UpdateDynamicPWReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpdateDynamicPWReq.DoorID)
}
#endif
inline void UpdateDynamicPWReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWReq.DoorID)
}
inline void UpdateDynamicPWReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWReq.DoorID)
}
inline ::std::string* UpdateDynamicPWReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDynamicPWReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.UpdateDynamicPWReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDynamicPWReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.UpdateDynamicPWReq.DoorID)
}

// -------------------------------------------------------------------

// UpdateDynamicPWResp

// int32 Result = 1;
inline void UpdateDynamicPWResp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UpdateDynamicPWResp::result() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.Result)
  return result_;
}
inline void UpdateDynamicPWResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.Result)
}

// string ErrMsg = 2;
inline void UpdateDynamicPWResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateDynamicPWResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void UpdateDynamicPWResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.ErrMsg)
}
#if LANG_CXX11
inline void UpdateDynamicPWResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.UpdateDynamicPWResp.ErrMsg)
}
#endif
inline void UpdateDynamicPWResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWResp.ErrMsg)
}
inline void UpdateDynamicPWResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWResp.ErrMsg)
}
inline ::std::string* UpdateDynamicPWResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateDynamicPWResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.UpdateDynamicPWResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateDynamicPWResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.UpdateDynamicPWResp.ErrMsg)
}

// repeated string PassWords = 3;
inline int UpdateDynamicPWResp::passwords_size() const {
  return passwords_.size();
}
inline void UpdateDynamicPWResp::clear_passwords() {
  passwords_.Clear();
}
inline const ::std::string& UpdateDynamicPWResp::passwords(int index) const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Get(index);
}
inline ::std::string* UpdateDynamicPWResp::mutable_passwords(int index) {
  // @@protoc_insertion_point(field_mutable:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Mutable(index);
}
inline void UpdateDynamicPWResp::set_passwords(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.PassWords)
  passwords_.Mutable(index)->assign(value);
}
inline void UpdateDynamicPWResp::set_passwords(int index, const char* value) {
  passwords_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:door.UpdateDynamicPWResp.PassWords)
}
inline void UpdateDynamicPWResp::set_passwords(int index, const char* value, size_t size) {
  passwords_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:door.UpdateDynamicPWResp.PassWords)
}
inline ::std::string* UpdateDynamicPWResp::add_passwords() {
  // @@protoc_insertion_point(field_add_mutable:door.UpdateDynamicPWResp.PassWords)
  return passwords_.Add();
}
inline void UpdateDynamicPWResp::add_passwords(const ::std::string& value) {
  passwords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:door.UpdateDynamicPWResp.PassWords)
}
inline void UpdateDynamicPWResp::add_passwords(const char* value) {
  passwords_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:door.UpdateDynamicPWResp.PassWords)
}
inline void UpdateDynamicPWResp::add_passwords(const char* value, size_t size) {
  passwords_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:door.UpdateDynamicPWResp.PassWords)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UpdateDynamicPWResp::passwords() const {
  // @@protoc_insertion_point(field_list:door.UpdateDynamicPWResp.PassWords)
  return passwords_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UpdateDynamicPWResp::mutable_passwords() {
  // @@protoc_insertion_point(field_mutable_list:door.UpdateDynamicPWResp.PassWords)
  return &passwords_;
}

// repeated int32 Time = 4;
inline int UpdateDynamicPWResp::time_size() const {
  return time_.size();
}
inline void UpdateDynamicPWResp::clear_time() {
  time_.Clear();
}
inline ::google::protobuf::int32 UpdateDynamicPWResp::time(int index) const {
  // @@protoc_insertion_point(field_get:door.UpdateDynamicPWResp.Time)
  return time_.Get(index);
}
inline void UpdateDynamicPWResp::set_time(int index, ::google::protobuf::int32 value) {
  time_.Set(index, value);
  // @@protoc_insertion_point(field_set:door.UpdateDynamicPWResp.Time)
}
inline void UpdateDynamicPWResp::add_time(::google::protobuf::int32 value) {
  time_.Add(value);
  // @@protoc_insertion_point(field_add:door.UpdateDynamicPWResp.Time)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
UpdateDynamicPWResp::time() const {
  // @@protoc_insertion_point(field_list:door.UpdateDynamicPWResp.Time)
  return time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
UpdateDynamicPWResp::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:door.UpdateDynamicPWResp.Time)
  return &time_;
}

// -------------------------------------------------------------------

// ConnectReq

// string DoorID = 1;
inline void ConnectReq::clear_doorid() {
  doorid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectReq::doorid() const {
  // @@protoc_insertion_point(field_get:door.ConnectReq.DoorID)
  return doorid_.GetNoArena();
}
inline void ConnectReq::set_doorid(const ::std::string& value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.ConnectReq.DoorID)
}
#if LANG_CXX11
inline void ConnectReq::set_doorid(::std::string&& value) {
  
  doorid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.ConnectReq.DoorID)
}
#endif
inline void ConnectReq::set_doorid(const char* value) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.ConnectReq.DoorID)
}
inline void ConnectReq::set_doorid(const char* value, size_t size) {
  
  doorid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.ConnectReq.DoorID)
}
inline ::std::string* ConnectReq::mutable_doorid() {
  
  // @@protoc_insertion_point(field_mutable:door.ConnectReq.DoorID)
  return doorid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectReq::release_doorid() {
  // @@protoc_insertion_point(field_release:door.ConnectReq.DoorID)
  
  return doorid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectReq::set_allocated_doorid(::std::string* doorid) {
  if (doorid != NULL) {
    
  } else {
    
  }
  doorid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doorid);
  // @@protoc_insertion_point(field_set_allocated:door.ConnectReq.DoorID)
}

// -------------------------------------------------------------------

// ConnectReqResp

// int32 Result = 1;
inline void ConnectReqResp::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 ConnectReqResp::result() const {
  // @@protoc_insertion_point(field_get:door.ConnectReqResp.Result)
  return result_;
}
inline void ConnectReqResp::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:door.ConnectReqResp.Result)
}

// string ErrMsg = 2;
inline void ConnectReqResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConnectReqResp::errmsg() const {
  // @@protoc_insertion_point(field_get:door.ConnectReqResp.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void ConnectReqResp::set_errmsg(const ::std::string& value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.ConnectReqResp.ErrMsg)
}
#if LANG_CXX11
inline void ConnectReqResp::set_errmsg(::std::string&& value) {
  
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.ConnectReqResp.ErrMsg)
}
#endif
inline void ConnectReqResp::set_errmsg(const char* value) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.ConnectReqResp.ErrMsg)
}
inline void ConnectReqResp::set_errmsg(const char* value, size_t size) {
  
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.ConnectReqResp.ErrMsg)
}
inline ::std::string* ConnectReqResp::mutable_errmsg() {
  
  // @@protoc_insertion_point(field_mutable:door.ConnectReqResp.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConnectReqResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:door.ConnectReqResp.ErrMsg)
  
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectReqResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    
  } else {
    
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:door.ConnectReqResp.ErrMsg)
}

// -------------------------------------------------------------------

// JsonHead

// int32 Length = 1;
inline void JsonHead::clear_length() {
  length_ = 0;
}
inline ::google::protobuf::int32 JsonHead::length() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Length)
  return length_;
}
inline void JsonHead::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.Length)
}

// int32 Flag = 2;
inline void JsonHead::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 JsonHead::flag() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Flag)
  return flag_;
}
inline void JsonHead::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.Flag)
}

// int32 NameLength = 3;
inline void JsonHead::clear_namelength() {
  namelength_ = 0;
}
inline ::google::protobuf::int32 JsonHead::namelength() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.NameLength)
  return namelength_;
}
inline void JsonHead::set_namelength(::google::protobuf::int32 value) {
  
  namelength_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.NameLength)
}

// string Typename = 4;
inline void JsonHead::clear_typename_() {
  typename__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JsonHead::typename_() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.Typename)
  return typename__.GetNoArena();
}
inline void JsonHead::set_typename_(const ::std::string& value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.JsonHead.Typename)
}
#if LANG_CXX11
inline void JsonHead::set_typename_(::std::string&& value) {
  
  typename__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.JsonHead.Typename)
}
#endif
inline void JsonHead::set_typename_(const char* value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.JsonHead.Typename)
}
inline void JsonHead::set_typename_(const char* value, size_t size) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.JsonHead.Typename)
}
inline ::std::string* JsonHead::mutable_typename_() {
  
  // @@protoc_insertion_point(field_mutable:door.JsonHead.Typename)
  return typename__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JsonHead::release_typename_() {
  // @@protoc_insertion_point(field_release:door.JsonHead.Typename)
  
  return typename__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JsonHead::set_allocated_typename_(::std::string* typename_) {
  if (typename_ != NULL) {
    
  } else {
    
  }
  typename__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typename_);
  // @@protoc_insertion_point(field_set_allocated:door.JsonHead.Typename)
}

// string ProtocolbufData = 5;
inline void JsonHead::clear_protocolbufdata() {
  protocolbufdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JsonHead::protocolbufdata() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.ProtocolbufData)
  return protocolbufdata_.GetNoArena();
}
inline void JsonHead::set_protocolbufdata(const ::std::string& value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:door.JsonHead.ProtocolbufData)
}
#if LANG_CXX11
inline void JsonHead::set_protocolbufdata(::std::string&& value) {
  
  protocolbufdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:door.JsonHead.ProtocolbufData)
}
#endif
inline void JsonHead::set_protocolbufdata(const char* value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:door.JsonHead.ProtocolbufData)
}
inline void JsonHead::set_protocolbufdata(const char* value, size_t size) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:door.JsonHead.ProtocolbufData)
}
inline ::std::string* JsonHead::mutable_protocolbufdata() {
  
  // @@protoc_insertion_point(field_mutable:door.JsonHead.ProtocolbufData)
  return protocolbufdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JsonHead::release_protocolbufdata() {
  // @@protoc_insertion_point(field_release:door.JsonHead.ProtocolbufData)
  
  return protocolbufdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JsonHead::set_allocated_protocolbufdata(::std::string* protocolbufdata) {
  if (protocolbufdata != NULL) {
    
  } else {
    
  }
  protocolbufdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolbufdata);
  // @@protoc_insertion_point(field_set_allocated:door.JsonHead.ProtocolbufData)
}

// int32 CheckSum = 6;
inline void JsonHead::clear_checksum() {
  checksum_ = 0;
}
inline ::google::protobuf::int32 JsonHead::checksum() const {
  // @@protoc_insertion_point(field_get:door.JsonHead.CheckSum)
  return checksum_;
}
inline void JsonHead::set_checksum(::google::protobuf::int32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:door.JsonHead.CheckSum)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace door

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_interact_5fdoor_2eproto__INCLUDED
