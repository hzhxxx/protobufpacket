// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jsonpackethead.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "jsonpackethead.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace jsonpacket {
class JsonPacketHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JsonPacketHead> {
} _JsonPacketHead_default_instance_;

namespace protobuf_jsonpackethead_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, namelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, typename__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, protocolbufdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JsonPacketHead, checksum_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(JsonPacketHead)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_JsonPacketHead_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "jsonpackethead.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _JsonPacketHead_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _JsonPacketHead_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024jsonpackethead.proto\022\njsonpacket\"\177\n\016Js"
      "onPacketHead\022\016\n\006Length\030\001 \001(\005\022\014\n\004Flag\030\002 \001"
      "(\005\022\022\n\nNameLength\030\003 \001(\005\022\020\n\010TypeName\030\004 \001(\t"
      "\022\027\n\017ProtocolbufData\030\005 \001(\t\022\020\n\010CheckSum\030\006 "
      "\001(\005BB\n\017com.json.packetB\022ProtobufJsonPack"
      "et\252\002\032Weilin.Protobuf.JsonPacketb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 239);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "jsonpackethead.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_jsonpackethead_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JsonPacketHead::kLengthFieldNumber;
const int JsonPacketHead::kFlagFieldNumber;
const int JsonPacketHead::kNameLengthFieldNumber;
const int JsonPacketHead::kTypeNameFieldNumber;
const int JsonPacketHead::kProtocolbufDataFieldNumber;
const int JsonPacketHead::kCheckSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JsonPacketHead::JsonPacketHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_jsonpackethead_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:jsonpacket.JsonPacketHead)
}
JsonPacketHead::JsonPacketHead(const JsonPacketHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  typename__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.typename_().size() > 0) {
    typename__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typename__);
  }
  protocolbufdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocolbufdata().size() > 0) {
    protocolbufdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolbufdata_);
  }
  ::memcpy(&length_, &from.length_,
    reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
  // @@protoc_insertion_point(copy_constructor:jsonpacket.JsonPacketHead)
}

void JsonPacketHead::SharedCtor() {
  typename__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
  _cached_size_ = 0;
}

JsonPacketHead::~JsonPacketHead() {
  // @@protoc_insertion_point(destructor:jsonpacket.JsonPacketHead)
  SharedDtor();
}

void JsonPacketHead::SharedDtor() {
  typename__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JsonPacketHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JsonPacketHead::descriptor() {
  protobuf_jsonpackethead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_jsonpackethead_2eproto::file_level_metadata[0].descriptor;
}

const JsonPacketHead& JsonPacketHead::default_instance() {
  protobuf_jsonpackethead_2eproto::InitDefaults();
  return *internal_default_instance();
}

JsonPacketHead* JsonPacketHead::New(::google::protobuf::Arena* arena) const {
  JsonPacketHead* n = new JsonPacketHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JsonPacketHead::Clear() {
// @@protoc_insertion_point(message_clear_start:jsonpacket.JsonPacketHead)
  typename__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  protocolbufdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&length_, 0, reinterpret_cast<char*>(&checksum_) -
    reinterpret_cast<char*>(&length_) + sizeof(checksum_));
}

bool JsonPacketHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:jsonpacket.JsonPacketHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Length = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Flag = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NameLength = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &namelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string TypeName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typename_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->typename_().data(), this->typename_().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jsonpacket.JsonPacketHead.TypeName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ProtocolbufData = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocolbufdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocolbufdata().data(), this->protocolbufdata().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "jsonpacket.JsonPacketHead.ProtocolbufData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CheckSum = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &checksum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:jsonpacket.JsonPacketHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:jsonpacket.JsonPacketHead)
  return false;
#undef DO_
}

void JsonPacketHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:jsonpacket.JsonPacketHead)
  // int32 Length = 1;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->length(), output);
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->namelength(), output);
  }

  // string TypeName = 4;
  if (this->typename_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typename_().data(), this->typename_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jsonpacket.JsonPacketHead.TypeName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->typename_(), output);
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolbufdata().data(), this->protocolbufdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jsonpacket.JsonPacketHead.ProtocolbufData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->protocolbufdata(), output);
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->checksum(), output);
  }

  // @@protoc_insertion_point(serialize_end:jsonpacket.JsonPacketHead)
}

::google::protobuf::uint8* JsonPacketHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:jsonpacket.JsonPacketHead)
  // int32 Length = 1;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->length(), target);
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->namelength(), target);
  }

  // string TypeName = 4;
  if (this->typename_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->typename_().data(), this->typename_().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jsonpacket.JsonPacketHead.TypeName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->typename_(), target);
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocolbufdata().data(), this->protocolbufdata().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "jsonpacket.JsonPacketHead.ProtocolbufData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->protocolbufdata(), target);
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->checksum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:jsonpacket.JsonPacketHead)
  return target;
}

size_t JsonPacketHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:jsonpacket.JsonPacketHead)
  size_t total_size = 0;

  // string TypeName = 4;
  if (this->typename_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->typename_());
  }

  // string ProtocolbufData = 5;
  if (this->protocolbufdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocolbufdata());
  }

  // int32 Length = 1;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->length());
  }

  // int32 Flag = 2;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  // int32 NameLength = 3;
  if (this->namelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->namelength());
  }

  // int32 CheckSum = 6;
  if (this->checksum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->checksum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JsonPacketHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:jsonpacket.JsonPacketHead)
  GOOGLE_DCHECK_NE(&from, this);
  const JsonPacketHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JsonPacketHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:jsonpacket.JsonPacketHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:jsonpacket.JsonPacketHead)
    MergeFrom(*source);
  }
}

void JsonPacketHead::MergeFrom(const JsonPacketHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:jsonpacket.JsonPacketHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.typename_().size() > 0) {

    typename__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typename__);
  }
  if (from.protocolbufdata().size() > 0) {

    protocolbufdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocolbufdata_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.namelength() != 0) {
    set_namelength(from.namelength());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
}

void JsonPacketHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:jsonpacket.JsonPacketHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JsonPacketHead::CopyFrom(const JsonPacketHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:jsonpacket.JsonPacketHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JsonPacketHead::IsInitialized() const {
  return true;
}

void JsonPacketHead::Swap(JsonPacketHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JsonPacketHead::InternalSwap(JsonPacketHead* other) {
  typename__.Swap(&other->typename__);
  protocolbufdata_.Swap(&other->protocolbufdata_);
  std::swap(length_, other->length_);
  std::swap(flag_, other->flag_);
  std::swap(namelength_, other->namelength_);
  std::swap(checksum_, other->checksum_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JsonPacketHead::GetMetadata() const {
  protobuf_jsonpackethead_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_jsonpackethead_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JsonPacketHead

// int32 Length = 1;
void JsonPacketHead::clear_length() {
  length_ = 0;
}
::google::protobuf::int32 JsonPacketHead::length() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.Length)
  return length_;
}
void JsonPacketHead::set_length(::google::protobuf::int32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.Length)
}

// int32 Flag = 2;
void JsonPacketHead::clear_flag() {
  flag_ = 0;
}
::google::protobuf::int32 JsonPacketHead::flag() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.Flag)
  return flag_;
}
void JsonPacketHead::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.Flag)
}

// int32 NameLength = 3;
void JsonPacketHead::clear_namelength() {
  namelength_ = 0;
}
::google::protobuf::int32 JsonPacketHead::namelength() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.NameLength)
  return namelength_;
}
void JsonPacketHead::set_namelength(::google::protobuf::int32 value) {
  
  namelength_ = value;
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.NameLength)
}

// string TypeName = 4;
void JsonPacketHead::clear_typename_() {
  typename__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JsonPacketHead::typename_() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.TypeName)
  return typename__.GetNoArena();
}
void JsonPacketHead::set_typename_(const ::std::string& value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.TypeName)
}
#if LANG_CXX11
void JsonPacketHead::set_typename_(::std::string&& value) {
  
  typename__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jsonpacket.JsonPacketHead.TypeName)
}
#endif
void JsonPacketHead::set_typename_(const char* value) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jsonpacket.JsonPacketHead.TypeName)
}
void JsonPacketHead::set_typename_(const char* value, size_t size) {
  
  typename__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jsonpacket.JsonPacketHead.TypeName)
}
::std::string* JsonPacketHead::mutable_typename_() {
  
  // @@protoc_insertion_point(field_mutable:jsonpacket.JsonPacketHead.TypeName)
  return typename__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JsonPacketHead::release_typename_() {
  // @@protoc_insertion_point(field_release:jsonpacket.JsonPacketHead.TypeName)
  
  return typename__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JsonPacketHead::set_allocated_typename_(::std::string* typename_) {
  if (typename_ != NULL) {
    
  } else {
    
  }
  typename__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typename_);
  // @@protoc_insertion_point(field_set_allocated:jsonpacket.JsonPacketHead.TypeName)
}

// string ProtocolbufData = 5;
void JsonPacketHead::clear_protocolbufdata() {
  protocolbufdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& JsonPacketHead::protocolbufdata() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.ProtocolbufData)
  return protocolbufdata_.GetNoArena();
}
void JsonPacketHead::set_protocolbufdata(const ::std::string& value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.ProtocolbufData)
}
#if LANG_CXX11
void JsonPacketHead::set_protocolbufdata(::std::string&& value) {
  
  protocolbufdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:jsonpacket.JsonPacketHead.ProtocolbufData)
}
#endif
void JsonPacketHead::set_protocolbufdata(const char* value) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:jsonpacket.JsonPacketHead.ProtocolbufData)
}
void JsonPacketHead::set_protocolbufdata(const char* value, size_t size) {
  
  protocolbufdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:jsonpacket.JsonPacketHead.ProtocolbufData)
}
::std::string* JsonPacketHead::mutable_protocolbufdata() {
  
  // @@protoc_insertion_point(field_mutable:jsonpacket.JsonPacketHead.ProtocolbufData)
  return protocolbufdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JsonPacketHead::release_protocolbufdata() {
  // @@protoc_insertion_point(field_release:jsonpacket.JsonPacketHead.ProtocolbufData)
  
  return protocolbufdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JsonPacketHead::set_allocated_protocolbufdata(::std::string* protocolbufdata) {
  if (protocolbufdata != NULL) {
    
  } else {
    
  }
  protocolbufdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), protocolbufdata);
  // @@protoc_insertion_point(field_set_allocated:jsonpacket.JsonPacketHead.ProtocolbufData)
}

// int32 CheckSum = 6;
void JsonPacketHead::clear_checksum() {
  checksum_ = 0;
}
::google::protobuf::int32 JsonPacketHead::checksum() const {
  // @@protoc_insertion_point(field_get:jsonpacket.JsonPacketHead.CheckSum)
  return checksum_;
}
void JsonPacketHead::set_checksum(::google::protobuf::int32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:jsonpacket.JsonPacketHead.CheckSum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace jsonpacket

// @@protoc_insertion_point(global_scope)
